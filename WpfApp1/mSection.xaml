<UserControl x:Class="WpfApp1.mSection"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366">

    <UserControl.Resources>
        <local:CenterToolTipConverter x:Key="CenterTooltipConverter" />
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Placement" Value="Top" />
            <!--Offset to the arrow path-->
            <Setter Property="HorizontalOffset">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource CenterTooltipConverter}">
                        <Binding RelativeSource="{RelativeSource Self}" Path="PlacementTarget.ActualWidth"/>
                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalOffset" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Padding="20" VerticalAlignment="Center">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border x:Name="border" CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="DemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="Regular" FontSize="14" Text="{TemplateBinding Content}" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border Height="700" Width="1366" Padding="150 50 150 50">
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity="0.5"/>
        </Border.Background>
        <Border Padding="20" Background="White">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
            </Border.Effect>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2  *"/>
                </Grid.ColumnDefinitions>



                <!-- Course -->
                <TextBlock HorizontalAlignment="Left" Margin="50,50,0,0" Text="Course Code" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                <Border Name="bdrCcode" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="280" Margin="50,75,0,0" Padding="10 5 10 5">
                    <TextBlock Name="CcodeT"  FontSize="16" VerticalAlignment="Center" TextWrapping="Wrap"/>
                </Border>

                <!-- Description -->
                <TextBlock HorizontalAlignment="Left" Margin="50,150,0,0" Text="Year Level" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                <TextBlock Name="tblYredit" HorizontalAlignment="Left" Margin="125,161,0,0" Text="" FontSize="8" VerticalAlignment="Top"  IsHitTestVisible="False" Foreground="SlateGray"/>
                <Border Name="bdrYear" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="130" Margin="50,175,0,0" Padding="10 5 10 5">
                    <Grid>
                        <TextBox Name="YearT" FontSize="16" VerticalAlignment="Center" BorderThickness="0" TextAlignment="Center" TextWrapping="Wrap" IsHitTestVisible="False" Margin="0,0,7,0" 
                                 TextChanged="YearT_TextChanged"/>

                        <ScrollBar Name="scrollYear" Height="38" VerticalAlignment="Top" ValueChanged="ScrollYear_ValueChanged" RenderTransformOrigin="1.412,0.489" Margin="101,-5,-10,-5" Visibility="Collapsed" >
                            <ScrollBar.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform Y="0.99"/>
                                </TransformGroup>
                            </ScrollBar.RenderTransform>
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            <RowDefinition Height="1E-05*"/>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        </Grid.RowDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                        <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="1"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                        </RepeatButton>
                                        <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="1"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                        </RepeatButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>
                    </Grid>
                </Border>


                <TextBlock HorizontalAlignment="Left" Margin="200,150,0,0" Text="Section" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                <TextBlock Name="tblsecedit" HorizontalAlignment="Left" Margin="257,161,0,0" Text="" FontSize="8" VerticalAlignment="Top"  IsHitTestVisible="False" Foreground="SlateGray"/>
                <Border Name="bdrSection" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="130" Margin="200,175,0,0" Padding="10 5 10 5">
                    <Grid>
                        <TextBox Name="SectionT" FontSize="16" VerticalAlignment="Center" BorderThickness="0" TextWrapping="Wrap" TextAlignment="Center" IsReadOnly="True" Cursor="Arrow" Margin="0,2,7,2" TextChanged="SectionT_TextChanged"/>
                        <ScrollBar Name="scrollSection" Height="38" VerticalAlignment="Top" ValueChanged="ScrollSection_ValueChanged" RenderTransformOrigin="1.412,0.489" Margin="101,-5,-10,-5" Visibility="Collapsed" >
                            <ScrollBar.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform Y="0.99"/>
                                </TransformGroup>
                            </ScrollBar.RenderTransform>
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            <RowDefinition Height="1E-05*"/>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        </Grid.RowDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                        <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="1"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                        </RepeatButton>
                                        <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="1"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                        </RepeatButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>
                    </Grid>
                </Border>

                <!-- Data Grid -->
                <Border Grid.Column="1" Grid.RowSpan="2">
                    <StackPanel Orientation="Vertical">
                        <Border Name="bdrSearch" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="200"  Padding="10 5 10 5" Margin="20,20,0,0">
                            <TextBox Name="S_codeT"  FontSize="16" VerticalAlignment="Center" BorderThickness="0" GotFocus="S_codeT_GotFocus" LostFocus="S_codeT_LostFocus" TextChanged="S_codeT_TextChanged"
                                     CharacterCasing="Upper"/>
                        </Border>
                        <TextBlock Name="SearchW" HorizontalAlignment="Left" Text="Seach here. . ." FontSize="16" VerticalAlignment="Top" FontStyle="Italic" Foreground="Gray" 
                                   IsHitTestVisible="False" Margin="30,-30,0,0"/>
                        
                        <Border Margin="20 20 20 0" Height="6" BorderThickness="0 2 0 1" BorderBrush="#486186"></Border>
                        <DataGrid x:Name="dtSection" CanUserResizeRows="False" CanUserAddRows="False" ItemsSource="{Binding}" CanUserDeleteRows="False" ColumnWidth="*" 
                                                       AutoGenerateColumns="False" AlternatingRowBackground="Gainsboro" AlternationCount="2" Margin="20 20 20 10" Height="350" SelectionChanged="DtSection_SelectionChanged"
                                                       BorderThickness="1" BorderBrush="#486186" HeadersVisibility="Column" SelectionUnit="FullRow" SelectionMode="Single" IsReadOnly="True" CanUserReorderColumns="False" CanUserSortColumns="False" CanUserResizeColumns="False">

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="40" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=Check,Mode=TwoWay}" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="Background" Value="#2D3D54"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                            <Setter Property="FontSize" Value="16"/>
                                        </Style>
                                    </DataGridTemplateColumn.HeaderStyle>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Binding="{Binding Sec_year}" Header="YEAR" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="Background" Value="#2D3D54"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                            <Setter Property="FontSize" Value="16"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Binding="{Binding Sec_name}" Header="SECTION" Width="*" IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="Background" Value="#2D3D54"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                            <Setter Property="FontSize" Value="16"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </Border>
                <CheckBox Name="chkAll" Click="ChkAll_Click" Height="14" Grid.Column="1" Margin="32,110,636,436"  />

                <!-- New Button-->
                <Button x:Name="btnAdd" Content="ADD NEW SECTION" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="280" Margin="50,0,12,231" Height="42" Background="#2D3D54" FontSize="14" 
                                            FontWeight="SemiBold" Cursor="Hand" Click="BtnAdd_Click" Visibility="Collapsed" >
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Opacity" Value="1.0" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False" >
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True" >
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Edit Button -->
                <Button x:Name="btnUpdate" Content="UPDATE" Background="#2d3d54" FontSize="14" FontWeight="SemiBold" Width="280" Height="41" Margin="50,0,12,280" VerticalAlignment="Bottom"
                                            HorizontalAlignment="Center" Cursor="Hand" IsEnabled="False" Click="BtnUpdate_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border" Value="lightgray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Opacity" Value="1.0" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False" >
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True" >
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Delete Button -->
                <Button x:Name="btnDelete" Content="DELETE" Background="#2d3d54" FontSize="14" FontWeight="SemiBold" Width="130" Height="41" Margin="200,0,12,280" VerticalAlignment="Bottom"
                                            HorizontalAlignment="Center" Cursor="Hand" IsEnabled="False" Click="BtnDelete_Click" Visibility="Collapsed">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="red"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border" Value="lightgray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Opacity" Value="1.0" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False" >
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True" >
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>


                <Button x:Name="btnCancel" Content="X" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="31" Height="32" Margin="0,-16,-16,0" VerticalAlignment="Top"
                            HorizontalAlignment="Right" Cursor="Hand" Click="BtnCancel_Click" Grid.Column="1" Visibility="Visible">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="Red"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <!-- END -->
            </Grid>
        </Border>
    </Border>
</UserControl>
