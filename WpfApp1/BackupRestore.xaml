<UserControl x:Class="WpfApp1.BackupRestore"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366">
    <Border>
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity="0.2"/>
        </Border.Background>
        <Grid>
            <Border VerticalAlignment="Center" HorizontalAlignment="Center" Height="200" Width="400" Background="White" Padding="10">
                <Border BorderBrush="#2B3D54" BorderThickness="2">
                    <Grid>
                        <Button Name="btnBackup" Content="BACK UP DATA" Grid.Column="0" Height="50" Width="200" Click="BtnBackup_Click" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Lovelo"
                                FontSize="16" Background="#2B3D54" Cursor="Hand" Margin="0 0 0 70">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False" >
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True" >
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Name="btnRestore" Content="RESTORE DATA" Grid.Column="0" Height="50" Width="200" Click="BtnRestore_Click" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Lovelo"
                                FontSize="16" Background="#2B3D54" Cursor="Hand" Margin="0 70 0 0">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False" >
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True" >
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Name="btnClose" Content="X" Grid.Column="0" Height="30" Width="30" Click="BtnClose_Click" HorizontalAlignment="Right" VerticalAlignment="Top" FontFamily="Lovelo"
                                FontSize="16" Background="#2B3D54" Cursor="Hand" Margin="-10">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False" >
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True" >
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </Border>
</UserControl>
