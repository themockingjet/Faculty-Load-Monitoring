<Window x:Class="WpfApp1.mS"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="mS" Height="0" Width="0" ResizeMode="NoResize" SizeToContent="WidthAndHeight" WindowStartupLocation="Manual" WindowState="Maximized" 
        WindowStyle="None" MinWidth="1366" MinHeight="768" MaxWidth="1366" MaxHeight="768">
    <Window.Resources>
        <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
            <Setter Property="HasDropShadow"
          Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                                Background="White"
                                BorderThickness="2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#2B3D54" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                        />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                                    Value="true">
                                <Setter TargetName="Border"
                                        Property="Padding"
                                        Value="0,3,0,3" />
                                <Setter TargetName="Border"
                                        Property="CornerRadius"
                                        Value="4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <StackPanel Orientation="Vertical">
        <!-- TOP GRID -->
        <Grid Height="40" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.ColumnSpan="2" Text="MANAGE SCHEDULES" FontFamily="Lovelo" FontSize="30" Foreground="#2D3D54" TextAlignment="Center" VerticalAlignment="Center"/>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Border Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="40" Margin="130,0,0,0" VerticalAlignment="Center" Width="40">
                    <Button x:Name="btn_Close" Click="Btn_Close_Click" Content="X" FontWeight="DemiBold" Background="Transparent" BorderThickness="0" ClipToBounds="True" ToolTip="Close" FontSize="15">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers >
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
                <Border x:Name="btn_Min" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="40" Margin="90,0,0,0" VerticalAlignment="Center" Width="40">
                    <Button FontWeight="ExtraBold" FontSize="15" BorderThickness="0" ClipToBounds="True" ToolTip="Minimize" HorizontalContentAlignment="Center">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Content" Value="_" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </Grid>
        </Grid>

        <!-- CONTENT GRID -->
        <Grid Name="grdcontent" Height="700" x:FieldModifier="public">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#1D976C" Offset="0"/>
                    <GradientStop Color="#38ef7d" Offset=".50"/>
                    <GradientStop Color="#1D976C" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>

            <!-- HOME BUTTON -->
            <Button x:Name="btn_Home" Margin="10 50 0 0" Height="100" Width="100" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand" BorderBrush="Transparent" BorderThickness="1" Click="Btn_Home_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Grid >
                    <Image Name="imgHome" Source="img/Home.png" Width="50" Margin="0 5 0 20"/>
                    <TextBlock Name="tblHome" Background="Transparent" Text="MENU" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontFamily="LOVELO" Foreground="White"/>
                </Grid>
            </Button>

            <!-- CONTENT -->
            <Grid>
                <Border Padding="120 20" >
                    <Grid Name="bdrContent" >

                        <Border Grid.Row="1" >
                            <Grid Background="White">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19*"/>
                                    <ColumnDefinition Width="61*"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" >
                                    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid Name="grdschedscrollviewer">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Name="grdschedviewer" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Margin="10" Grid.Column="0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Name="grdchklist" Height="0"/>
                                                        <RowDefinition Height="120"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Border Name="bdrChecklist" BorderBrush="Black" BorderThickness="2" Grid.Row="0" Margin="0,0,0,20" Visibility="Collapsed">
                                                        <Grid>
                                                            <DataGrid Name="dtChecklist" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserAddRows="False" ItemsSource="{Binding}" CanUserDeleteRows="False" ColumnWidth="*" 
                                                              AutoGenerateColumns="False" AlternatingRowBackground="LightGray" AlternationCount="2" BorderThickness="1" BorderBrush="#486186"
                                                              HeadersVisibility="Column" SelectionUnit="FullRow" SelectionMode="Single" IsHitTestVisible="False" Visibility="Collapsed">
                                                                <DataGrid.Columns>

                                                                    <DataGridTemplateColumn Width="0.15*" x:Name="CheckBox_Col" CanUserSort="False" CanUserReorder="False" CanUserResize="False" IsReadOnly="True">
                                                                        <DataGridTemplateColumn.CellTemplate>
                                                                            <DataTemplate>
                                                                                <CheckBox IsChecked="{Binding Path=Check}" IsHitTestVisible="False" HorizontalAlignment="Center" />
                                                                            </DataTemplate>
                                                                        </DataGridTemplateColumn.CellTemplate>
                                                                        <DataGridTemplateColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTemplateColumn.HeaderStyle>
                                                                    </DataGridTemplateColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=Sub_code}" Header="CODE" Width="0.35*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=Sub_desc}" Header="DESCRIPTION" Width="1.2*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=T_units}" Header="TOTAL&#x0a;UNITS" Width=".32*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=Ch_lec}" Header="    LEC&#x0a; RMNG&#x0a;HOURS" Width=".3*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=Ch_lab}" Header="   LAB&#x0a; RMNG&#x0a;HOURS" Width=".3*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=Petition}" Header="PETITION" Width="0.35*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                            <DataGrid Name="dtOther" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserAddRows="False" ItemsSource="{Binding}" CanUserDeleteRows="False" ColumnWidth="*" 
                                                              AutoGenerateColumns="False" AlternatingRowBackground="LightGray" AlternationCount="2" BorderThickness="1" BorderBrush="#486186"
                                                              HeadersVisibility="Column" SelectionUnit="FullRow" SelectionMode="Single" IsHitTestVisible="False" Visibility="Collapsed">
                                                                <DataGrid.Columns>

                                                                    <DataGridTemplateColumn Width="0.15*"  CanUserSort="False" CanUserReorder="False" CanUserResize="False" IsReadOnly="True">
                                                                        <DataGridTemplateColumn.CellTemplate>
                                                                            <DataTemplate>
                                                                                <CheckBox IsChecked="{Binding Path=Check}" IsHitTestVisible="False" HorizontalAlignment="Center" />
                                                                            </DataTemplate>
                                                                        </DataGridTemplateColumn.CellTemplate>
                                                                        <DataGridTemplateColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTemplateColumn.HeaderStyle>
                                                                    </DataGridTemplateColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=Other}" Header="OTHER" Width="*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=THours}" Header=" TOTAL&#x0a;HOURS" Width=".4*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>

                                                                    <DataGridTextColumn Binding="{Binding Path=UHours}" Header="ALLOCATED&#x0a;    HOURS" Width=".4*" IsReadOnly="True" CanUserSort="False" CanUserReorder="False" CanUserResize="False" >
                                                                        <DataGridTextColumn.HeaderStyle>
                                                                            <Style TargetType="DataGridColumnHeader">
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="Background" Value="#2D3D54"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                                                <Setter Property="FontSize" Value="16"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.HeaderStyle>
                                                                        <DataGridTextColumn.CellStyle>
                                                                            <Style TargetType="DataGridCell">
                                                                                <Setter Property="FontSize" Value="14"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.CellStyle>
                                                                        <DataGridTextColumn.ElementStyle>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                            </Style>
                                                                        </DataGridTextColumn.ElementStyle>
                                                                    </DataGridTextColumn>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                        </Grid>
                                                    </Border>
                                                    <Border BorderBrush="Black" Height="120" BorderThickness="2 2 2 0" Grid.Row="1">
                                                        <Grid>
                                                            <TextBlock Grid.RowSpan="2" x:Name="tbltwo" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="60"/>
                                                        </Grid>
                                                    </Border>
                                                    <Border Grid.Row="2" BorderThickness="1" BorderBrush="Black" Height="540" VerticalAlignment="Top">
                                                        <Grid x:Name="grdmScheds">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height=".2*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>

                                                            <Grid Grid.ColumnSpan="7" Grid.Row="1">
                                                                <Border BorderBrush="Black" BorderThickness="1"/>
                                                            </Grid>

                                                            <!-- Column 0 -->
                                                            <Grid Grid.Column="0" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="TIME" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="4" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="8:00 - 9:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="6" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="9:00 - 10:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="8" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="10:00 - 11:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="10" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="11:00 - 12:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="12" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="12:00 - 1:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="14" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="1:00 - 2:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="16" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="2:00 - 3:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="18" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="3:00 - 4:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="20" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="4:00 - 5:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="22" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="5:00 - 6:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="24" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="6:00 - 7:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="26" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <!-- Column 1-->
                                                            <Grid Grid.Column="1" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="MON" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="1" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="Gainsboro" />
                                                            </Grid>

                                                            <!-- Column 2-->
                                                            <Grid Grid.Column="2" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="TUE" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="2" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="Gainsboro" />
                                                            </Grid>

                                                            <!-- Column 3-->
                                                            <Grid Grid.Column="3" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="WED" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="3" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="Gainsboro" />
                                                            </Grid>

                                                            <!-- Column 4-->
                                                            <Grid Grid.Column="4" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="THU" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="4" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="Gainsboro" />
                                                            </Grid>

                                                            <!-- Column 5-->
                                                            <Grid Grid.Column="5" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="FRI" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="5" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="Gainsboro" />
                                                            </Grid>
                                                            <!-- Column 6-->
                                                            <Grid Grid.Column="6" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="SAT" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="6" Grid.Row="2" Grid.RowSpan="26" >
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="Gainsboro" />
                                                            </Grid>

                                                            <!-- Controls -->
                                                            <Grid Name="grdSchedule" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="6" Grid.RowSpan="26" >
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                                <Grid Margin="10" Grid.Column="1" Width="659" IsHitTestVisible="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="120"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Border BorderBrush="Black" Height="120" BorderThickness="2 2 2 0" Grid.Row="0">
                                                        <Grid>
                                                            <Border Name="bdrvSched" BorderBrush="Black" BorderThickness="0" Grid.Row="0" >
                                                                <TextBlock Grid.RowSpan="2" x:Name="tblvSched" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="60"/>
                                                            </Border>
                                                        </Grid>
                                                    </Border>

                                                    <Border Grid.Row="1" Height="540" BorderThickness="1" BorderBrush="Black">
                                                        <Grid Name="grdvScheds" Grid.Row="1">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height=".2*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>

                                                            <Grid Grid.ColumnSpan="7" Grid.Row="1">
                                                                <Border BorderBrush="Black" BorderThickness="1"/>
                                                            </Grid>

                                                            <!-- Column 0 -->
                                                            <Grid Grid.Column="0" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="TIME" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="4" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="8:00 - 9:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="6" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="9:00 - 10:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="8" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="10:00 - 11:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="10" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="11:00 - 12:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="12" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="12:00 - 1:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="14" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="1:00 - 2:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="16" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="2:00 - 3:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="18" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="3:00 - 4:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="20" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="4:00 - 5:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="22" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="5:00 - 6:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="24" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="6:00 - 7:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="26" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <!-- Column 1-->
                                                            <Grid Grid.Column="1" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="MON" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="1" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            </Grid>

                                                            <!-- Column 2-->
                                                            <Grid Grid.Column="2" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="TUE" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="2" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            </Grid>

                                                            <!-- Column 3-->
                                                            <Grid Grid.Column="3" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="WED" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="3" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            </Grid>

                                                            <!-- Column 4-->
                                                            <Grid Grid.Column="4" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="THU" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="4" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            </Grid>

                                                            <!-- Column 5-->
                                                            <Grid Grid.Column="5" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="FRI" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="5" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            </Grid>
                                                            <!-- Column 6-->
                                                            <Grid Grid.Column="6" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="SAT" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="6" Grid.Row="2" Grid.RowSpan="26" >
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            </Grid>

                                                            <!-- SCHEDULE -->
                                                            <Grid Name="grdvSchedule" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="6" Grid.RowSpan="26" >
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </Grid>
                                            <Grid Name="grdschedfooter" Grid.Row="1" Grid.Column="0" Margin="10" Width="822" HorizontalAlignment="Left">
                                                <Border BorderBrush="#2B3D54" BorderThickness="1" Height="100">
                                                    <Grid Margin="5">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Prepared by:" FontSize="15"/>
                                                        <TextBlock Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="2" Text="Recommending Approval:" FontSize="15"/>
                                                        <TextBlock Grid.Column="5" Grid.Row="0" Text="Approved by:" FontSize="15"/>

                                                        <TextBlock Name="txtCr" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Text="" FontWeight="Bold" FontSize="16" TextDecorations="Underline" VerticalAlignment="Bottom"/>
                                                        <TextBlock Name="txtCp" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Text="" FontWeight="Bold" FontSize="16" TextDecorations="Underline" VerticalAlignment="Bottom"/>
                                                        <TextBlock Name="txtCa" Grid.Column="5" Grid.Row="1" Grid.ColumnSpan="2" Text="" FontWeight="Bold" FontSize="16" TextDecorations="Underline" VerticalAlignment="Bottom"/>

                                                        <TextBlock Grid.Column="0" Grid.Row="2" Text="Campus Registrar" FontStyle="Oblique"/>
                                                        <TextBlock Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2" Text="Chairperson, Information Technology Dept." FontStyle="Oblique"/>
                                                        <TextBlock Grid.Column="5" Grid.Row="2" Text="Campus Administrator" FontStyle="Oblique"/>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>

                                <Grid Grid.Column="0">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" >
                                        <Grid>
                                            <Grid Name="grdAdd" Height="750" Width="266">
                                                <TextBlock HorizontalAlignment="Left" Margin="33,20,0,0" Text="Instructor" FontSize="16" VerticalAlignment="Top"/>
                                                <ComboBox x:Name="cbInstructor" Height="45" Width="200" Margin="0,45,0,0" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbInstructor_SelectionChanged"
                                                        VerticalAlignment="Top" IsEditable="True" TextSearch.TextPath="Ins_name" TextBoxBase.TextChanged="CbInstructor_TextChanged" MaxDropDownHeight="105"
                                                        SelectedValuePath="Ins_id" GotFocus="CbInstructor_GotFocus">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock>
                                                                <Run Text="{Binding Ins_name}"/>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>

                                                <TextBlock Name="txtCourse" HorizontalAlignment="Left" Margin="33,100,0,0" Text="Course/YrSec" FontSize="16" VerticalAlignment="Top" Height="21" Width="152"/>
                                                <ComboBox x:Name="cbYrSection" Height="45" Width="200" Margin="33,125,33,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center"
                                                      SelectionChanged="CbYrSection_SelectionChanged" IsEnabled="False" SelectedValuePath="Sec_id" IsEditable="True" TextSearch.TextPath="Section" MaxDropDownHeight="105"
                                                      TextBoxBase.TextChanged="CbYrSection_TextChanged" GotFocus="CbYrSection_GotFocus">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock>
                                                                <Run Text="{Binding Section}"/>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>

                                                <ComboBox x:Name="cbOther" Height="44" Width="200" Margin="33,125,33,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center"
                                                      SelectionChanged="CbOther_SelectionChanged" IsEnabled="False" Visibility="Collapsed">
                                                    <ComboBox.Template>
                                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                        <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                    </Canvas>
                                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                </Grid>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                    </Themes1:SystemDropShadowChrome>
                                                                </Popup>
                                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="ClickMode" Value="Press"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                            </Border>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                </Trigger>
                                                                <Trigger Property="HasItems" Value="False">
                                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsGrouping" Value="True"/>
                                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                </MultiTrigger>
                                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </ComboBox.Template>
                                                </ComboBox>
                                                <Grid Name="grdOther" Margin="160 100 30 0" IsEnabled="False" VerticalAlignment="Top">
                                                    <TextBlock HorizontalAlignment="Left" Text="Other" FontSize="16" VerticalAlignment="Top" Margin="-2,0,0,0" />
                                                    <TextBlock Text="(?)" Foreground="LightGray" Margin="41,2,19,2" ToolTip="• Consulation Hour &#x0a;• Research &#x0a;• Extension" Cursor="Hand"/>
                                                    <CheckBox Name="chkOther" RenderTransformOrigin="0.412,0.1" Margin="56,4,1,2" Checked="ChkOther_Click" Unchecked="ChkOther_Click"/>
                                                </Grid>

                                                <Grid Margin="0 180 0 0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Name="rowdefmain" Height="250"/>
                                                        <RowDefinition Height="300"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid Grid.Row="0">
                                                        <TextBlock HorizontalAlignment="Left" Margin="33,0,0,0" Text="Subject" FontSize="16" VerticalAlignment="Top"/>
                                                        <ComboBox x:Name="cbSubject" Height="40" Width="200" Margin="0,25,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center"
                    SelectedValuePath="Sub_id" SelectionChanged="CbSubject_SelectionChanged" IsEnabled="False" IsEditable="True" TextSearch.TextPath="Sub_code" MaxDropDownHeight="105"
                TextBoxBase.TextChanged="CbSubject_TextChanged" GotFocus="CbSubject_GotFocus">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock>
                  <Run Text="{Binding Sub_code}"/>
                  <Run Text="{Binding Sub_desc}"/>
                                                                    </TextBlock>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>

                                                        <TextBlock HorizontalAlignment="Left" Margin="33,80,0,0" Text="Subject Type" FontSize="16" VerticalAlignment="Top" Height="21" Width="89"/>
                                                        <ComboBox x:Name="cbmType" Height="45" Margin="33,100,33,0" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbmType_SelectionChanged" VerticalAlignment="Top"
                                  IsEnabled="False">
                                                            <ComboBox.Template>
                                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                            </Canvas>
                                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Themes1:SystemDropShadowChrome>
                                                                        </Popup>
                                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                            <ToggleButton.Style>
                                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                                    </Border>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </ToggleButton.Style>
                                                                        </ToggleButton>
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                        </Trigger>
                                                                        <Trigger Property="HasItems" Value="False">
                                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                        </MultiTrigger>
                                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </ComboBox.Template>
                                                        </ComboBox>


                                                        <TextBlock HorizontalAlignment="Left" Margin="33,160,0,0" Text="Room" FontSize="16" VerticalAlignment="Top" Height="21" Width="42"/>
                                                        <ComboBox x:Name="cbRoom" Height="45" Margin="33,185,33,0" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbRoom_SelectionChanged"
                                                                VerticalAlignment="Top" IsEnabled="False" SelectedValuePath="Room_id" IsEditable="True" TextSearch.TextPath="Room_name" MaxDropDownHeight="105"
                                                            TextBoxBase.TextChanged="CbRoom_TextChanged" GotFocus="CbRoom_GotFocus" Grid.RowSpan="2">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock>
                                            <Run Text="{Binding Room_name}"/>
                                                                    </TextBlock>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>
                                                    </Grid>
                                                    <Grid Grid.Row="1">
                                                        <TextBlock HorizontalAlignment="Left" Margin="33,0,0,0" Text="Day" FontSize="16" VerticalAlignment="Top"/>
                                                        <ComboBox x:Name="cbDay" Height="40" Width="200" Margin="0,25,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbDay_SelectionChanged" IsEnabled="False">
                                                            <ComboBox.Template>
                                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                            </Canvas>
                                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Themes1:SystemDropShadowChrome>
                                                                        </Popup>
                                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                            <ToggleButton.Style>
                                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                                    </Border>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </ToggleButton.Style>
                                                                        </ToggleButton>
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                        </Trigger>
                                                                        <Trigger Property="HasItems" Value="False">
                                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                        </MultiTrigger>
                                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </ComboBox.Template>
                                                        </ComboBox>

                                                        <TextBlock HorizontalAlignment="Left" Margin="33 80,0,0" Text="Duration" FontSize="16" VerticalAlignment="Top"/>
                                                        <Grid Name="grdDur" Margin="23,105,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="45" Width="220" IsEnabled="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid Grid.Column="0" Name="grdHour">
                                                                <TextBlock HorizontalAlignment="Left" Text="Hour(s)" FontSize="16" VerticalAlignment="Top" Margin="58,13,0,0"/>
                                                                <TextBox Name="txtHour" Text="0" Height="45" FontSize="18" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="36" Margin="5,0,69,0" 
                                                         />
                                                                <ScrollBar Name="scrollhour" Height="45" VerticalAlignment="Top" ValueChanged="Scrollhour_ValueChanged" RenderTransformOrigin="1.412,0.489" Margin="41,0,52,0" >
                                                                    <ScrollBar.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                                            <RotateTransform Angle="0"/>
                                                                            <TranslateTransform Y="0.99"/>
                                                                        </TransformGroup>
                                                                    </ScrollBar.RenderTransform>
                                                                    <ScrollBar.Template>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                                    <RowDefinition Height="1E-05*"/>
                                                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="FocusVisualStyle">
                                                                                                <Setter.Value>
                                                                                                    <Style>
                                                                                                        <Setter Property="Control.Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate>
                                                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Padding" Value="1"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                                                </RepeatButton>
                                                                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="FocusVisualStyle">
                                                                                                <Setter.Value>
                                                                                                    <Style>
                                                                                                        <Setter Property="Control.Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate>
                                                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Padding" Value="1"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                                                </RepeatButton>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </ScrollBar.Template>
                                                                </ScrollBar>
                                                            </Grid>

                                                            <Grid Grid.Column="1" Name="grdMin">
                                                                <TextBlock HorizontalAlignment="Left" Text="Min(s)" FontSize="16" VerticalAlignment="Top" RenderTransformOrigin="0.724,0.458" Margin="66,13,0,0"/>
                                                                <TextBox Name="txtMin" Text="0" Height="45" Width="36" FontSize="18" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="10,0,64,0"/>
                                                                <ScrollBar Name="scrollmin" Height="45"  VerticalAlignment="Top" ValueChanged="Scrollmin_ValueChanged" RenderTransformOrigin="0.5,0.5" Margin="46,0,47,0">
                                                                    <ScrollBar.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                                            <RotateTransform Angle="0"/>
                                                                            <TranslateTransform/>
                                                                        </TransformGroup>
                                                                    </ScrollBar.RenderTransform>
                                                                    <ScrollBar.Template>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                                    <RowDefinition Height="1E-05*"/>
                                                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="FocusVisualStyle">
                                                                                                <Setter.Value>
                                                                                                    <Style>
                                                                                                        <Setter Property="Control.Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate>
                                                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Padding" Value="1"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                                                </RepeatButton>
                                                                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="FocusVisualStyle">
                                                                                                <Setter.Value>
                                                                                                    <Style>
                                                                                                        <Setter Property="Control.Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate>
                                                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                                            <Setter Property="Padding" Value="1"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                                                </RepeatButton>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </ScrollBar.Template>
                                                                </ScrollBar>
                                                            </Grid>
                                                        </Grid>

                                                        <TextBlock HorizontalAlignment="Left" Margin="33 160,0,0" Text="Start Time" FontSize="16" VerticalAlignment="Top"/>
                                                        <ComboBox x:Name="cbStime" Height="40" Width="200" Margin="0,185,0,0" FontSize="16" VerticalContentAlignment="Top" VerticalAlignment="Top" IsEnabled="False" SelectionChanged="CbStime_SelectionChanged">
                                                            <ComboBox.Template>
                                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                            </Canvas>
                                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Themes1:SystemDropShadowChrome>
                                                                        </Popup>
                                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                            <ToggleButton.Style>
                                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                                    </Border>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </ToggleButton.Style>
                                                                        </ToggleButton>
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                        </Trigger>
                                                                        <Trigger Property="HasItems" Value="False">
                                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                        </MultiTrigger>
                                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </ComboBox.Template>
                                                        </ComboBox>

                                                        <Button Name="btnAddSched" Content="ADD SCHEDULE" Grid.Column="0" Height="50" Width="200" Click="BtnAddSched_Click" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                    Margin="0 0 0 0" FontFamily="Lovelo" FontSize="16" Background="#2B3D54" Cursor="Hand" IsEnabled="False">
                                                            <Button.Template>
                                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Background" TargetName="border" Value="White"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Button.Template>
                                                            <Button.Style>
                                                                <Style TargetType="Button">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsEnabled" Value="False" >
                                                                            <Setter Property="Foreground" Value="Black" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="True" >
                                                                            <Setter Property="Foreground" Value="White" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>


                                <ComboBox Name="cbhour" Width="250" Height="50" Visibility="Hidden"/>
                                <ComboBox Name="cbhour1" Width="250" Height="50" Visibility="Hidden"/>
                                <ComboBox Name="cbhour2" Width="250" Height="50" Visibility="Hidden"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>

        </Grid>

        <Grid Height="30" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="1" FontWeight="DemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding Source={x:Static sys:DateTime.Now},StringFormat='{}{0: hh:mm:ss tt dddd, MMM dd, yyyy}'}" Margin="0,0,7,0" FontFamily="Courier New" FontSize="15" Foreground="Black"/>
            <TextBlock Grid.Column="0" Name="txtCuraysem" FontWeight="DemiBold" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Courier New" FontSize="15" Foreground="Black"/>
        </Grid>

    </StackPanel>
</Window>
