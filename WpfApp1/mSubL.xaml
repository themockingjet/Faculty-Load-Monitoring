<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="WpfApp1.mSubL"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366">

    <UserControl.Resources>
        <local:CenterToolTipConverter x:Key="CenterTooltipConverter" />
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Placement" Value="Top" />
            <!--Offset to the arrow path-->
            <Setter Property="HorizontalOffset">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource CenterTooltipConverter}">
                        <Binding RelativeSource="{RelativeSource Self}" Path="PlacementTarget.ActualWidth"/>
                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalOffset" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Padding="20" VerticalAlignment="Center">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border x:Name="border" CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="DemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="Regular" FontSize="14" Text="{TemplateBinding Content}" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Border>
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity=".5"/>
        </Border.Background>
        <Border Width="800" Height="300" Padding="10" Background="White">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
            </Border.Effect>
            <Grid>
                <Border BorderBrush="#2B3D54" BorderThickness="2" Focusable="True">
                    <Grid>
                        <TextBlock HorizontalAlignment="Left" Margin="165,20,0,0" Text="Subject Information*" FontSize="16" VerticalAlignment="Top"/>
                        <!-- Subject Code -->
                        <Border x:Name="bdrS_code" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="100" Margin="165,45,0,0" Padding="10 5 10 5">
                            <Grid>
                                <TextBox x:Name="S_codeT" BorderThickness="0" FontSize="16" VerticalAlignment="Center" PreviewTextInput="LetterNumber" MaxLength="10" GotFocus="S_codeT_GotFocus" LostFocus="S_codeT_LostFocus" TextChanged="S_codeT_TextChanged"
                                     CharacterCasing="Upper" TabIndex="2"/>
                                <TextBlock Name="ScodeW" Text="SUB CODE" FontSize="15" VerticalAlignment="Center" FontStyle="Italic" Foreground="Gray" IsHitTestVisible="False"/>
                            </Grid>
                        </Border>

                        <!-- Subject Description Name -->
                        <Border x:Name="bdrS_desc" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="280" Margin="285,45,0,0" Padding="10 5 10 5">
                            <Grid>
                                <TextBox x:Name="S_descT" BorderThickness="0" FontSize="16" VerticalAlignment="Center" PreviewTextInput="LetterNumber" MaxLength="50" GotFocus="S_descT_GotFocus" LostFocus="S_descT_LostFocus" TextChanged="S_descT_TextChanged"
                                     CharacterCasing="Upper" TabIndex="3"/>
                                <TextBlock Name="SdescW" Text="SUBJECT DESCRIPTION" FontSize="15" VerticalAlignment="Center" Foreground="Gray" FontStyle="Italic" IsHitTestVisible="False"/>
                            </Grid>
                        </Border>

                        <TextBlock HorizontalAlignment="Left" Margin="50,20,0,0" Text="Course*" FontSize="16" VerticalAlignment="Top"/>
                        <Border x:Name="bdrCourse" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="95" Margin="50,45,0,0">
                            <ComboBox x:Name="CourseT" Cursor="Hand" FontSize="16" VerticalAlignment="Center" BorderThickness="0" GotFocus="CourseT_GotFocus"
                                      LostFocus="CourseT_LostFocus" SelectionChanged="CourseT_SelectionChanged" SelectedValuePath="Course_id" TabIndex="1">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                    <Border x:Name="DropDownBorder" MaxHeight="102" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Themes1:SystemDropShadowChrome>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                <GradientStop Color="Transparent" Offset="0"/>
                                                                                <GradientStop Color="Transparent" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <Run Text="{Binding Course_name}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Border>

                        <TextBlock HorizontalAlignment="Left" Margin="585,20,0,0" Text="Year*" FontSize="16" VerticalAlignment="Top"/>
                        <!-- Year -->
                        <Border x:Name="bdrYear" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="120" Margin="585,45,0,0" IsEnabled="False" >
                            <ComboBox x:Name="YearT" Cursor="Hand" FontSize="16" VerticalAlignment="Center" BorderThickness="0" PreviewTextInput="LetterOnly" IsTextSearchEnabled="True" GotFocus="YearT_GotFocus" LostFocus="YearT_LostFocus"
                                      SelectedValuePath="Year" SelectionChanged="YearT_SelectionChanged" TabIndex="4">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                    <Border MaxHeight="104" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Themes1:SystemDropShadowChrome>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="White" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                                <Run Text="{Binding Year}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Border>

                        <TextBlock HorizontalAlignment="Left" Margin="590,110,0,0" Text="Semester*" FontSize="16" VerticalAlignment="Top"/>
                        <!-- Semester -->
                        <Border x:Name="bdrSemester" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="115" Margin="590,135,0,0">
                            <ComboBox x:Name="SemT" FontSize="16" VerticalAlignment="Center" BorderThickness="0" GotFocus="SemT_GotFocus" LostFocus="SemT_LostFocus" SelectionChanged="SemT_SelectionChanged" TabIndex="9">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                    <Border MaxHeight="104" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer" Width="112">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Themes1:SystemDropShadowChrome>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" Cursor="Hand" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="White" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                            </ComboBox>
                        </Border>

                        <!-- Units -->
                        <TextBlock HorizontalAlignment="Left" Margin="50,110,0,0" Text="Total Units" FontSize="16" VerticalAlignment="Top" Width="110" TextAlignment="Center"/>
                        <Border x:Name="bdrTunits" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="110" Margin="50,135,0,0" Padding="10 5 10 5">
                            <TextBox x:Name="TunitsT" Text="0" FontSize="16" VerticalAlignment="Center" TextAlignment="Center" IsReadOnly="True" Cursor="Arrow" BorderThickness="0" TextChanged="TunitsT_TextChanged" IsTabStop="False"/>
                        </Border>

                        <!-- Credit Unit Lec -->
                        <TextBlock HorizontalAlignment="Left" Margin="186,93,0,0" Text="Units" FontSize="16" VerticalAlignment="Top" Width="114" TextAlignment="Center"/>
                        <TextBlock HorizontalAlignment="Left" Margin="180,110,0,0" Text="Lec          Lab" Width="120" FontSize="16" VerticalAlignment="Top" TextAlignment="Center"/>
                        <Border x:Name="bdrCUlec" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41"
                                    VerticalAlignment="Top" Width="50" Margin="180,135,0,0" Padding="10 5 10 5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="18*"/>
                                    <RowDefinition Height="11*"/>
                                </Grid.RowDefinitions>
                                <TextBox Text="0" x:Name="CUlecT" FontSize="16" VerticalAlignment="Center" TextAlignment="Center" Margin="-6,3,6,3" PreviewTextInput="NumberOnly" Grid.RowSpan="2" IsReadOnly="True" 
                                         IsHitTestVisible="False" BorderThickness="0" IsTabStop="False"/>
                                <ScrollBar Name="scrollUnitLec" Height="39" VerticalAlignment="Center" HorizontalAlignment="Right" ValueChanged="ScrollUnitLec_ValueChanged" RenderTransformOrigin="0.5,0.5" Margin="0,-5,-10,-5" Width="5" Grid.RowSpan="2" TabIndex="5">
                                    <ScrollBar.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="-1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ScrollBar.RenderTransform>
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="1E-05*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageUpCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageDownCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                            </Grid>
                        </Border>

                        <!-- Credit Unit Lab -->
                        <Border x:Name="bdrCUlab" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41"
                                    VerticalAlignment="Top" Width="50" Margin="250,135,0,0" Padding="10 5 10 5">
                            <Grid>
                                <TextBox Text="0" x:Name="CUlabT" FontSize="16" VerticalAlignment="Center" TextAlignment="Center" Margin="-6,3,6,3" PreviewTextInput="NumberOnly"  IsReadOnly="True" 
                                         IsHitTestVisible="False" BorderThickness="0" IsTabStop="False"/>
                                <ScrollBar Name="scrollUnitLab" Height="39" VerticalAlignment="Center" HorizontalAlignment="Right" ValueChanged="ScrollUnitLab_ValueChanged" RenderTransformOrigin="0.5,0.5" Margin="0,-5,-10,-5" Width="5" TabIndex="6">
                                    <ScrollBar.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="-1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ScrollBar.RenderTransform>
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="1E-05*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageUpCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageDownCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                            </Grid>
                        </Border>

                        <!-- Contact Hours -->
                        <TextBlock HorizontalAlignment="Left" Margin="320,110,0,0" Text="Total Hours" FontSize="16" VerticalAlignment="Top" Width="110" TextAlignment="Center"/>
                        <Border x:Name="bdrChours" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="110" Margin="320,135,0,0" Padding="10 5 10 5">
                            <TextBox x:Name="ChoursT" FontSize="16" Text="0" VerticalAlignment="Center" TextAlignment="Center" IsReadOnly="True" Cursor="Arrow" BorderThickness="0" TextChanged="ChoursT_TextChanged" IsTabStop="False"/>
                        </Border>

                        <!-- Contact Hours Lec -->
                        <TextBlock HorizontalAlignment="Left" Margin="450,93,0,0" Text="Hours" FontSize="16" VerticalAlignment="Top" Width="120" TextAlignment="Center"/>
                        <TextBlock HorizontalAlignment="Left" Margin="450,110,0,0" Text="Lec          Lab" Width="120" FontSize="16" VerticalAlignment="Top" TextAlignment="Center"/>
                        <Border x:Name="bdrCHlec" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41"
                                    VerticalAlignment="Top" Width="50" Margin="450,135,0,0" Padding="10 5 10 5">
                            <Grid>
                                <TextBox Text="0" x:Name="CHlecT" FontSize="16" VerticalAlignment="Center" TextAlignment="Center" Margin="-6,3,6,2" PreviewTextInput="NumberOnly"  IsReadOnly="True"
                                         IsHitTestVisible="False" BorderThickness="0" IsTabStop="False"/>
                                <ScrollBar Name="scrollhourLec" Height="39" VerticalAlignment="Center" HorizontalAlignment="Right" ValueChanged="ScrollhourLec_ValueChanged" RenderTransformOrigin="0.5,0.5" Margin="0,-5,-10,-5" Width="5" TabIndex="7">
                                    <ScrollBar.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="-1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ScrollBar.RenderTransform>
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="1E-05*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageUpCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageDownCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                            </Grid>
                        </Border>

                        <!-- Contact Hours Lab -->
                        <Border x:Name="bdrCHlab" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41"
                                    VerticalAlignment="Top" Width="50" Margin="520,135,0,0" Padding="10 5 10 5">
                            <Grid>
                                <TextBox Text="0" x:Name="CHlabT" FontSize="16" VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Right" Margin="-6,3,6,3" Width="28" Height="23" 
                                         PreviewTextInput="NumberOnly"  IsReadOnly="True" IsHitTestVisible="False" BorderThickness="0" IsTabStop="False"/>
                                <ScrollBar Name="scrollhourLab" Height="39" VerticalAlignment="Center" HorizontalAlignment="Right" ValueChanged="ScrollhourLab_ValueChanged" RenderTransformOrigin="0.5,0.5" Margin="0,-5,-10,-5" Width="5" TabIndex="8">
                                    <ScrollBar.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="-1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ScrollBar.RenderTransform>
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="1E-05*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageUpCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="ScrollBar.PageDownCommand">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                        </RepeatButton>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Style>
                                                                <Style TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Thumb.Style>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="FocusVisualStyle">
                                                                <Setter.Value>
                                                                    <Style>
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                </RepeatButton>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                            </Grid>
                        </Border>
                        
                        <!-- POP UPS -->

                        <Border Name="ppScode" Padding="20" VerticalAlignment="Center" Margin="50,-51,402,214" Height="113" Visibility="Collapsed" IsHitTestVisible="False">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Name="ppScodetxt" Text="Subject Code already exist for this course" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                        <Border Name="ppSdesc" Padding="20" VerticalAlignment="Center" Margin="235,-51,168,214" Height="113" Visibility="Collapsed" IsHitTestVisible="False">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Name="ppsdesctxt" Text="Subject Description already exist for this course" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                        <Border Name="ppSem" Padding="20" VerticalAlignment="Center" Margin="543,29,31,134" Height="113" Visibility="Collapsed" IsHitTestVisible="False">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Text="Semester is required" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                        <Border Name="ppTunits" Padding="20" VerticalAlignment="Center" Margin="-82,29,484,134" Height="113" Visibility="Collapsed" IsHitTestVisible="False">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Text="Total number of units can not be zero" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                        <Border Name="ppChours" Padding="20" VerticalAlignment="Center" Margin="186,29,217,134" Height="113" Visibility="Collapsed" IsHitTestVisible="False">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Text="Total number of contact hours can not be zero" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>

                        <!-- END -->
                        <!-- Update Button-->
                        <Button x:Name="btnSave" Content="SAVE" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="75" Height="41" Background="#2D3D54" Foreground="White" FontSize="14" 
                            FontWeight="SemiBold" Cursor="Hand" Click="BtnSave_Click" Margin="0 0 0 20" IsEnabled="False" TabIndex="10" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="lightgray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <!-- Delete Button -->
                        <Button Click="BtnCancel_Click" x:Name="btnCancel" Content="X" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="31" Height="32" VerticalAlignment="Top"
                            HorizontalAlignment="Right" Cursor="Hand" IsTabStop="False">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="Red"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="lightgray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Border>
</UserControl>
