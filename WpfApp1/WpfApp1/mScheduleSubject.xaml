<UserControl x:Class="WpfApp1.mScheduleSubject"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366">

    <Border Height="700" Width="1366" Padding="150 100 150 100">
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity="0.5"/>
        </Border.Background>
        <Border Background="White" Padding="20">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Height="130">
                    <Border BorderBrush="Black" Height="120" BorderThickness="2 2 2 2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Name="bdrZero" BorderBrush="Black" BorderThickness="0" Grid.Row="0" >
                                <TextBlock x:Name="tblIns_name" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="36"/>
                            </Border>
                            <Border Name="bdrOne" BorderBrush="Black" BorderThickness="0"  Grid.Row="1">
                                <TextBlock x:Name="tblRoom_name" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="36"/>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>


                <Grid Grid.Row="1">
                    <Border BorderThickness="2" BorderBrush="Black">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".6*"/>
                                <ColumnDefinition Width=".8*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock HorizontalAlignment="Left" Margin="0,20,0,0" Text="Course*" FontSize="16" VerticalAlignment="Top"/>
                                <ComboBox x:Name="cbCourse" Height="40" Width="110" Margin="0,45,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left"
                                      SelectedValuePath="Course" SelectionChanged="CbCourse_SelectionChanged">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                        <Border MaxHeight="136" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Themes1:SystemDropShadowChrome>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <Run Text="{Binding Course}"/>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border x:Name="bdr" BorderThickness="1">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="80"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Margin="5" Grid.Column="0" Text="{Binding Course}"/>
                                                                <TextBlock Margin="5" Grid.Column="1" Text="-"/>
                                                                <TextBlock Margin="5" Grid.Column="2" Text="{Binding Description}"/>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                                                <Setter Property="Background" TargetName="bdr" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="bdr" Value="#FFD9D9D9"/>
                                                            </Trigger>
                                                            <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="bdr">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="bdr" Value="#FF7EB4EA"/>

                                                            </Trigger>
                                                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                                                <Setter Property="Background" TargetName="bdr">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="bdr" Value="#FF7EB4EA"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>

                                <TextBlock HorizontalAlignment="Left" Margin="0,100,0,0" Text="Year &amp; Section*" FontSize="16" VerticalAlignment="Top"/>
                                <ComboBox x:Name="cbYrSection" Height="40" Width="110" Margin="0,125,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left"
                                          SelectionChanged="CbYrSection_SelectionChanged">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                        <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Themes1:SystemDropShadowChrome>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>

                                <TextBlock HorizontalAlignment="Left" Margin="0,180,0,0" Text="Subject*" FontSize="16" VerticalAlignment="Top"/>
                                <ComboBox x:Name="cbSubject" Height="40" Width="110" Margin="0,205,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left"
                                      SelectedValuePath="Sub_code" SelectionChanged="CbSubject_SelectionChanged">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                        <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Themes1:SystemDropShadowChrome>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                            <Run Text="{Binding Sub_code}"/>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border x:Name="bdr" BorderThickness="1">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="80"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Margin="5" Grid.Column="0" Text="{Binding Sub_code}"/>
                                                                <TextBlock Margin="5" Grid.Column="1" Text="-"/>
                                                                <TextBlock Margin="5" Grid.Column="2" Text="{Binding Sub_desc}"/>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                                                <Setter Property="Background" TargetName="bdr" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="bdr" Value="#FFD9D9D9"/>
                                                            </Trigger>
                                                            <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="bdr">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="bdr" Value="#FF7EB4EA"/>

                                                            </Trigger>
                                                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                                                <Setter Property="Background" TargetName="bdr">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="bdr" Value="#FF7EB4EA"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                            </Grid>

                            <Border Grid.Column="1" BorderBrush="Black" BorderThickness="2 0 2 0">
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Name="grdLec" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" Height="275">
                                        <TextBlock Margin="0 0 0 0" HorizontalAlignment="Left" Text="Day*" FontSize="16" VerticalAlignment="Top"/>
                                        <ComboBox x:Name="cbDayLec" Height="40" Width="110" Margin="0 25 0 0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbDayLec_SelectionChanged">
                                            <ComboBox.Template>
                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </Grid>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Themes1:SystemDropShadowChrome>
                                                        </Popup>
                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                    </Border>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                        </Trigger>
                                                        <Trigger Property="HasItems" Value="False">
                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ComboBox.Template>
                                        </ComboBox>

                                        <TextBlock HorizontalAlignment="Left" Margin="0,80,0,0" Text="Duration*" FontSize="16" VerticalAlignment="Top"/>
                                        <TextBlock HorizontalAlignment="Left" Margin="54,115,0,0" Text="Hour(s)*" FontSize="16" VerticalAlignment="Top"/>
                                        <TextBox Name="txtHourLec" Text="0" Height="40" Margin="0,105,78,49" FontSize="18" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                        <ScrollBar Name="scrollhourLec" Height="40" Margin="34,105,61,49" VerticalAlignment="Top" ValueChanged="ScrollhourLec_ValueChanged" RenderTransformOrigin="0.5,0.5">
                                            <ScrollBar.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </ScrollBar.RenderTransform>
                                            <ScrollBar.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                            <RowDefinition Height="1E-05*"/>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                        </Grid.RowDefinitions>
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                        <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb>
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                        <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>

                                        <TextBlock HorizontalAlignment="Left" Margin="54,170,-1,0" Text="Min(s)*" FontSize="16" VerticalAlignment="Top"/>
                                        <TextBox Name="txtMinLec" Text="0" Height="40" Margin="0,160,78,0" FontSize="18" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                        <ScrollBar Name="scrollminLec" Height="40" Margin="34,160,61,0" VerticalAlignment="Top" ValueChanged="ScrollminLec_ValueChanged" RenderTransformOrigin="0.5,0.5">
                                            <ScrollBar.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </ScrollBar.RenderTransform>
                                            <ScrollBar.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                            <RowDefinition Height="1E-05*"/>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                        </Grid.RowDefinitions>
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                        <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb>
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                        <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>

                                        <TextBlock HorizontalAlignment="Left" Margin="0,210,0,0" Text="Start Time*" FontSize="16" VerticalAlignment="Top"/>
                                        <ComboBox x:Name="cbStimeLec" Height="40" Width="110" Margin="0,235,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbStimeLec_SelectionChanged">
                                            <ComboBox.Template>
                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </Grid>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Themes1:SystemDropShadowChrome>
                                                        </Popup>
                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                    </Border>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                        </Trigger>
                                                        <Trigger Property="HasItems" Value="False">
                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ComboBox.Template>
                                        </ComboBox>
                                    </Grid>

                                    <Grid Name="grdLab" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" Height="275">
                                        <TextBlock HorizontalAlignment="Left" Margin="0,0 0,0" Text="Day*" FontSize="16" VerticalAlignment="Top"/>
                                        <ComboBox x:Name="cbDayLab" Height="40" Width="110" Margin="0,25,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbDayLab_SelectionChanged">
                                            <ComboBox.Template>
                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </Grid>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Themes1:SystemDropShadowChrome>
                                                        </Popup>
                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                    </Border>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                        </Trigger>
                                                        <Trigger Property="HasItems" Value="False">
                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ComboBox.Template>
                                        </ComboBox>

                                        <TextBlock HorizontalAlignment="Left" Margin="0 80,0,0" Text="Duration*" FontSize="16" VerticalAlignment="Top"/>
                                        <TextBlock HorizontalAlignment="Left" Margin="54,115,0,0" Text="Hour(s)*" FontSize="16" VerticalAlignment="Top"/>
                                        <TextBox Name="txtHourLab" Text="0" Height="40" Margin="0,105,78,49" FontSize="18" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                        <ScrollBar Name="scrollhourLab" Height="40" Margin="34,105,61,49" VerticalAlignment="Top" ValueChanged="ScrollhourLab_ValueChanged" RenderTransformOrigin="0.5,0.5">
                                            <ScrollBar.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </ScrollBar.RenderTransform>
                                            <ScrollBar.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                            <RowDefinition Height="1E-05*"/>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                        </Grid.RowDefinitions>
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                        <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb>
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                        <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>

                                        <TextBlock HorizontalAlignment="Left" Margin="54,170,-1,0" Text="Min(s)*" FontSize="16" VerticalAlignment="Top"/>
                                        <TextBox Name="txtMinLab" Text="0" Height="40" Margin="0,160,78,0" FontSize="18" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                        <ScrollBar Name="scrollminLab" Height="40" Margin="34,160,61,0" VerticalAlignment="Top" ValueChanged="ScrollminLab_ValueChanged" RenderTransformOrigin="0.5,0.5">
                                            <ScrollBar.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </ScrollBar.RenderTransform>
                                            <ScrollBar.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                            <RowDefinition Height="1E-05*"/>
                                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                        </Grid.RowDefinitions>
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                        <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb>
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                        <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                                                            <RepeatButton.Style>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </RepeatButton.Style>
                                                            <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                                                        </RepeatButton>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                                            <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>
                                        
                                        <TextBlock HorizontalAlignment="Left" Margin="0 210,0,0" Text="Start Time*" FontSize="16" VerticalAlignment="Top"/>
                                        <ComboBox x:Name="cbStimeLab" Height="40" Width="110" Margin="0,235,0,0" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbStimeLab_SelectionChanged">
                                            <ComboBox.Template>
                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </Grid>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Themes1:SystemDropShadowChrome>
                                                        </Popup>
                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                    <Setter Property="Focusable" Value="False"/>
                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                    </Border>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                    </Trigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                    </MultiDataTrigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                        </Trigger>
                                                        <Trigger Property="HasItems" Value="False">
                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ComboBox.Template>
                                        </ComboBox>
                                    </Grid>
                                </Grid>
                            </Border>

                            <Grid Grid.Column="2">
                                <TextBlock Name="tblDayD1" FontSize="16" FontWeight="DemiBold" TextAlignment="Center" Margin="33,60,213,243" Width="180"/>
                                <TextBlock Name="tblDayD2" FontSize="16" FontWeight="DemiBold" TextAlignment="Center" Margin="213,60,33,243" Width="180"/>
                                <Grid Name="grdDouble" Width="360" Height="150" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Name="bdrDouble1" Grid.Column="0" Background="White" BorderBrush="Black" BorderThickness="1 2"  Margin="0 -1">
                                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <TextBlock Name="tblInsD1" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblSubD1" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblTypeD1" VerticalAlignment="Top" FontSize="14" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblYrsecD1" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblRmD1" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblDurationD1" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblStartD1" VerticalAlignment="Top" FontSize="14" HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                    <Border Name="bdrDouble2" Grid.Column="1" Background="White" BorderBrush="Black" BorderThickness="1 2" Margin="0 -1">
                                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <TextBlock Name="tblInsD2" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblSubD2" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblTypeD2" VerticalAlignment="Top" FontSize="14" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblYrsecD2" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblRmD2" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblDurationD2" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblStartD2" VerticalAlignment="Top" FontSize="14" HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>

                                <TextBlock Name="tblDay" FontSize="16" FontWeight="DemiBold" TextAlignment="Center" Margin="123,60,123,243" Width="180"/>
                                <Grid Name="grdSingle" Width="180" Height="150" Visibility="Collapsed">
                                    <Border Name="bdrSingle" Background="White" BorderBrush="Black" BorderThickness="1 2"  Margin="0 -1">
                                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <TextBlock Name="tblIns" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblSub" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblType" VerticalAlignment="Top" FontSize="14" HorizontalAlignment="Center" />
                                            <TextBlock Name="tblYrsec" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblRm" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblDuration" VerticalAlignment="Top" FontSize="14" FontWeight="DemiBold" HorizontalAlignment="Center"/>
                                            <TextBlock Name="tblStart" VerticalAlignment="Top" FontSize="14"  HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                                
                                <!-- SAVE -->
                                <Button Name="btnAdd" Height="50" Width="50" Content="ADD" Click="BtnCheck_Click" Margin="126,266,217,10"></Button>
                                <Button Name="btnCancel" Height="50" Width="50" Margin="204,266,139,10" Content="X" Click="BtnCancel_Click" Cursor="Hand"></Button>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>

                <TextBlock x:Name="tblLec" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Lecture:" VerticalAlignment="Top" Margin="270,5,0,0" Grid.Row="1" FontWeight="DemiBold" FontSize="16" Visibility="Collapsed"/>
                <TextBlock x:Name="tblLab" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Laboratory:" VerticalAlignment="Top" Margin="437,5,0,0" Grid.Row="1" FontWeight="DemiBold" FontSize="16" Visibility="Collapsed"/>


            </Grid>
        </Border>
    </Border>
</UserControl>
