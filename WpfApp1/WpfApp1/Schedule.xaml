<Window x:Class="WpfApp1.Schedule"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        mc:Ignorable="d"
        Title="Schedule" Height="0" Width="0" ResizeMode="NoResize" SizeToContent="WidthAndHeight" WindowStartupLocation="Manual" WindowState="Maximized" 
        WindowStyle="None" MinWidth="1366" MinHeight="768" MaxWidth="1366" MaxHeight="768">

    <StackPanel Orientation="Vertical">
        <!-- TOP GRID -->
        <Grid Height="40" Background="#D3D7DB">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.ColumnSpan="2" Text="VIEW AND MANAGE SCHEDULES" FontFamily="Lovelo" FontSize="30" Foreground="#2D3D54" TextAlignment="Center" VerticalAlignment="Center"/>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Border Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="40" Margin="130,0,0,0" VerticalAlignment="Center" Width="40">
                    <Button x:Name="btn_Close" Click="Btn_Close_Click" Content="X" FontWeight="DemiBold" Background="Transparent" BorderThickness="0" ClipToBounds="True" ToolTip="Close" FontSize="15">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers >
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
                <Border x:Name="btn_Min" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="40" Margin="90,0,0,0" VerticalAlignment="Center" Width="40">
                    <Button FontWeight="ExtraBold" FontSize="15" BorderThickness="0" ClipToBounds="True" ToolTip="Minimize" HorizontalContentAlignment="Center">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Content" Value="_" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </Grid>
        </Grid>

        <!-- CONTENT GRID -->
        <Grid Name="grdcontent" Height="700"  Background="#2D3D54" x:FieldModifier="public">

            <Button x:Name="btn_Home" Margin="10 50 0 0" Height="100" Width="100" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand" BorderBrush="Transparent" BorderThickness="1" Click="Btn_Home_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Grid >
                    <Image Name="imgHome" Source="img/Home.png" Width="50" Margin="0 5 0 20"/>
                    <TextBlock Name="tblHome" Background="Transparent" Text="HOME" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontFamily="LOVELO" Foreground="White"/>
                </Grid>
            </Button>

            <!-- CONTENT -->
            <Border Padding="120 20" >
                <Grid Name="bdrContent" >
                    <Border Name="bdrSelect" Background="White" BorderBrush="Black" BorderThickness="2" Width="500" Height="300" Visibility="Collapsed">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="50"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!-- Semester -->
                            <Border Name="bdrSemester" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Right" Height="50" 
                                    VerticalAlignment="Top" Width="301" Padding="8" Margin="0,40,98,0" Grid.ColumnSpan="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox x:Name="cbSemester" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="283" BorderThickness="0" SelectionChanged="CbSemester_SelectionChanged" Height="32" FontSize="16">
                                        <ComboBox.Template>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                        <Border x:Name="DropDownBorder" MaxHeight="103.5" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="283" >
                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="ClickMode" Value="Press"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                                <Border.Background>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Border.Background>
                                                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                    <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                                <GradientStop Color="White" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="Black" Offset="0"/>
                                                                                                <GradientStop Color="Black" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                                <GradientStop Color="White" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True"/>
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ComboBox.Template>
                                    </ComboBox>
                                    <TextBlock Name="tblSemester" Background="Transparent" Grid.Column="0" Text="Please Select a Semester" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" 
                                               Margin="10 0 0 0" FontSize="16"/>
                                </Grid>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush" Value="#2D3D54"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!-- School Year -->
                            <Border Name="bdrSy" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Right" Height="50" 
                                    VerticalAlignment="Top" Width="301" Padding="8" Margin="0,135,98,0" Grid.ColumnSpan="2" Grid.RowSpan="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox x:Name="cbSy" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="283" BorderThickness="0" SelectionChanged="CbSy_SelectionChanged" Height="32" FontSize="16">
                                        <ComboBox.Template>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                        <Border x:Name="DropDownBorder" MaxHeight="103.5" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="283">
                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="ClickMode" Value="Press"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                                <Border.Background>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Border.Background>
                                                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                    <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                                <GradientStop Color="White" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="Black" Offset="0"/>
                                                                                                <GradientStop Color="Black" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                                <GradientStop Color="White" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True"/>
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ComboBox.Template>
                                    </ComboBox>
                                    <TextBlock Name="tblSy" Background="Transparent" Grid.Column="0" Text="Please Select Academic Year" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" Margin="10 0 0 0" 
                                               FontSize="16"/>
                                </Grid>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush" Value="#2D3D54"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!-- Button -->
                            <Button x:Name="btnProceed" Content="PROCEED" VerticalAlignment="Top" Width="100" Height="41" Background="#2D3D54" Foreground="White" FontSize="14" 
                            FontWeight="SemiBold" Cursor="Hand" Grid.ColumnSpan="2" HorizontalAlignment="Center" Grid.Row="1" Margin="0,70,0,0" Click="BtnProceed_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Button.IsDefaulted" Value="True">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF2C628B"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF2C628B"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                    </Border>

                    <TabControl x:Name="tcSched" Visibility="Visible">
                        <!-- VIEW SCHED -->
                        <TabItem Header="VIEWING OF SCHEDULES" Width="561" Height="35" Cursor="Hand">
                            <Border>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="2.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0">
                                        <Border VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 30 0 0" Width="200" Height="45">
                                            <Grid>
                                                <ComboBox x:Name="cbType" Height="45" Width="200" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbType_SelectionChanged">
                                                    <ComboBox.Template>
                                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                        <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                    </Canvas>
                                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                </Grid>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                    </Themes1:SystemDropShadowChrome>
                                                                </Popup>
                                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="ClickMode" Value="Press"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                            </Border>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                </Trigger>
                                                                <Trigger Property="HasItems" Value="False">
                                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsGrouping" Value="True"/>
                                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                </MultiTrigger>
                                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </ComboBox.Template>
                                                </ComboBox>
                                                <TextBlock Name="txtType" Text="Choose Category" FontStyle="Italic" FontSize="16" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Margin="10,10,73,10" Height="25"/>
                                            </Grid>
                                        </Border>

                                        <Border Name="bdrIns" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 120 0 0" Width="200" Height="45" Visibility="Collapsed">
                                            <Grid>
                                                <ComboBox x:Name="cbIns" Height="45" Width="200" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbIns_SelectionChanged" BorderThickness="2">
                                                    <ComboBox.Template>
                                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                        <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                    </Canvas>
                                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                </Grid>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                    </Themes1:SystemDropShadowChrome>
                                                                </Popup>
                                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="ClickMode" Value="Press"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                            </Border>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                </Trigger>
                                                                <Trigger Property="HasItems" Value="False">
                                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsGrouping" Value="True"/>
                                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                </MultiTrigger>
                                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </ComboBox.Template>
                                                </ComboBox>
                                                <TextBlock Name="txtIns" Text="Select Instructor" FontStyle="Italic" FontSize="16" Foreground="Gray" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Margin="10,10,80,9" Height="26"/>
                                            </Grid>
                                        </Border>

                                        <Border Name="bdrRoom" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 120 0 0" Width="200" Height="45" Visibility="Collapsed">
                                            <Grid>
                                                <ComboBox x:Name="cbRm" Height="45" Width="200" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbRm_SelectionChanged" BorderThickness="2">
                                                    <ComboBox.Template>
                                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                    <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                        <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                    </Canvas>
                                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                </Grid>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                    </Themes1:SystemDropShadowChrome>
                                                                </Popup>
                                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="ClickMode" Value="Press"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                            </Border>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                            </Trigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                            </MultiDataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                </Trigger>
                                                                <Trigger Property="HasItems" Value="False">
                                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsGrouping" Value="True"/>
                                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                </MultiTrigger>
                                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </ComboBox.Template>
                                                </ComboBox>
                                                <TextBlock Name="txtRoom" Text="Select Room" FontStyle="Italic" FontSize="16" Foreground="Gray"  VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Height="23" Margin="10,12,106,10"/>
                                            </Grid>
                                        </Border>

                                        <Grid Name="bdrSection" Height="135" Width="200" Margin="0 120 0 0" VerticalAlignment="Top" Visibility="Collapsed">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Border Name="bdrCourse" VerticalAlignment="Top" HorizontalAlignment="Center" Width="200" Height="45" Visibility="Visible">
                                                    <Grid>
                                                        <ComboBox x:Name="cbCourse" Height="45" Width="200" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbCourse_SelectionChanged" BorderThickness="2">
                                                            <ComboBox.Template>
                                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                            </Canvas>
                                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Themes1:SystemDropShadowChrome>
                                                                        </Popup>
                                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                            <ToggleButton.Style>
                                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                                    </Border>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </ToggleButton.Style>
                                                                        </ToggleButton>
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                        </Trigger>
                                                                        <Trigger Property="HasItems" Value="False">
                                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                        </MultiTrigger>
                                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </ComboBox.Template>
                                                        </ComboBox>
                                                        <TextBlock Name="txtCourse" Text="Select Course" FontStyle="Italic" FontSize="16" Foreground="Gray" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Height="23" Margin="10,12,98,10"/>
                                                    </Grid>
                                                </Border>
                                            </Grid>

                                            <Grid Grid.Row="1" VerticalAlignment="Bottom">
                                                <Border HorizontalAlignment="Center" Width="200" Height="45" Visibility="Visible">
                                                    <Grid>
                                                        <ComboBox x:Name="cbYsec" Height="45" Width="200" FontSize="16" VerticalContentAlignment="Center" VerticalAlignment="Top" SelectionChanged="CbYsec_SelectionChanged" BorderThickness="2">
                                                            <ComboBox.Template>
                                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                                            <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                                                <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                                            </Canvas>
                                                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Themes1:SystemDropShadowChrome>
                                                                        </Popup>
                                                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                                            <ToggleButton.Style>
                                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                    <Setter Property="ClickMode" Value="Press"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                                    </Border>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                                    <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                                    <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                                                </LinearGradientBrush>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                                    </Trigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                                    </MultiDataTrigger>
                                                                                                    <MultiDataTrigger>
                                                                                                        <MultiDataTrigger.Conditions>
                                                                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                                        </MultiDataTrigger.Conditions>
                                                                                                        <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                                    </MultiDataTrigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </ToggleButton.Style>
                                                                        </ToggleButton>
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                                        </Trigger>
                                                                        <Trigger Property="HasItems" Value="False">
                                                                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsGrouping" Value="True"/>
                                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                        </MultiTrigger>
                                                                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </ComboBox.Template>
                                                        </ComboBox>
                                                        <TextBlock Name="txtSection" Text="Select Year/Section" FontStyle="Italic" FontSize="16" Foreground="Gray" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Height="23" Margin="10,10,58,12"/>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Grid>

                                        <Button Grid.Column="0" Height="50" Click="Button_Click" Margin="10,284,0,283"/>
                                    </Grid>

                                    <Border Grid.Column="1">
                                        <Border>
                                            <ScrollViewer VerticalScrollBarVisibility="Visible" Padding="10 0">
                                                <Grid Height="660" Margin="10">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Border BorderBrush="Black" Height="110" BorderThickness="2 2 2 2" Grid.Row="0" Margin="0 0 0 15">
                                                        <Grid>
                                                            <Border Name="bdrvSched" BorderBrush="Black" BorderThickness="0" Grid.Row="0" >
                                                                <TextBlock Grid.RowSpan="2" x:Name="tblvSched" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="60"/>
                                                            </Border>
                                                        </Grid>
                                                    </Border>
                                                    
                                                    <Border Grid.Row="1" BorderThickness="1" BorderBrush="Black">
                                                        <Grid Name="grdvScheds" Grid.Row="1">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height=".2*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>

                                                            <Grid Grid.ColumnSpan="7" Grid.Row="1">
                                                                <Border BorderBrush="Black" BorderThickness="1"/>
                                                            </Grid>

                                                            <!-- Column 0 -->
                                                            <Grid Grid.Column="0" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="TIME" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="4" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="8:00 - 9:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="6" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="9:00 - 10:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="8" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="10:00 - 11:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="10" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="11:00 - 12:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="12" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="12:00 - 1:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="14" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="1:00 - 2:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="16" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="2:00 - 3:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="18" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="3:00 - 4:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="20" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="4:00 - 5:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="22" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="5:00 - 6:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="24" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="6:00 - 7:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="0" Grid.Row="26" Grid.RowSpan="2">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                                </Border>
                                                            </Grid>

                                                            <!-- Column 1-->
                                                            <Grid Grid.Column="1" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="MON" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="1" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                                <Grid Name="grdvMONDAY">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                </Grid>
                                                            </Grid>

                                                            <!-- Column 2-->
                                                            <Grid Grid.Column="2" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="TUE" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="2" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                                <Grid Name="grdvTUESDAY">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                </Grid>
                                                            </Grid>

                                                            <!-- Column 3-->
                                                            <Grid Grid.Column="3" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="WED" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="3" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                                <Grid Name="grdvWEDNESDAY">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                </Grid>
                                                            </Grid>

                                                            <!-- Column 4-->
                                                            <Grid Grid.Column="4" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="THU" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="4" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                                <Grid Name="grdvTHURSDAY">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                </Grid>
                                                            </Grid>

                                                            <!-- Column 5-->
                                                            <Grid Grid.Column="5" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1">
                                                                    <TextBlock Text="FRI" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="5" Grid.Row="2" Grid.RowSpan="26">
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                                <Grid Name="grdvFRIDAY">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                </Grid>
                                                            </Grid>
                                                            <!-- Column 6-->
                                                            <Grid Grid.Column="6" Grid.Row="0">
                                                                <Border BorderBrush="Black" BorderThickness="1" >
                                                                    <TextBlock Text="SAT" FontWeight="DemiBold" TextAlignment="Center"/>
                                                                </Border>
                                                            </Grid>

                                                            <Grid Grid.Column="6" Grid.Row="2" Grid.RowSpan="26" >
                                                                <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                                <Grid Name="grdvSATURDAY">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                </Grid>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Border>

                                </Grid>
                            </Border>
                        </TabItem>

                        <!-- MANAGE SCHED -->
                        <TabItem Header="MANAGING OF SCHEDULES" Width="561" Height="35" Cursor="Hand">
                            <Border >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="2.5*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="1">
                                        <ScrollViewer VerticalScrollBarVisibility="Visible">
                                            <Grid Height="660" Margin="10">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="Black" Height="120" BorderThickness="2 2 2 0" Grid.Row="0">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Border Name="bdrZero" BorderBrush="Black" BorderThickness="0" Grid.Row="0" >
                                                            <TextBlock x:Name="tblzero" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="36"/>
                                                        </Border>
                                                        <Border Name="bdrOne" BorderBrush="Black" BorderThickness="0"  Grid.Row="1">
                                                            <TextBlock x:Name="tblone" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="36"/>
                                                        </Border>
                                                        <TextBlock Grid.RowSpan="2" x:Name="tbltwo" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="60"/>
                                                    </Grid>
                                                </Border>
                                                <Border Grid.Row="1" BorderThickness="1" BorderBrush="Black" Height="540" VerticalAlignment="Top">
                                                    <Grid x:Name="grdmScheds">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height=".2*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>

                                                        <Grid Grid.ColumnSpan="7" Grid.Row="1">
                                                            <Border BorderBrush="Black" BorderThickness="1"/>
                                                        </Grid>

                                                        <!-- Column 0 -->
                                                        <Grid Grid.Column="0" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <TextBlock Text="TIME" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="4" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="8:00 - 9:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="6" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="9:00 - 10:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="8" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="10:00 - 11:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="10" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="11:00 - 12:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="12" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="12:00 - 1:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="14" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="1:00 - 2:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="16" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="2:00 - 3:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="18" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="3:00 - 4:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="20" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="4:00 - 5:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="22" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <TextBlock Text="5:00 - 6:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="24" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="6:00 - 7:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="0" Grid.Row="26" Grid.RowSpan="2">
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                            </Border>
                                                        </Grid>

                                                        <!-- Column 1-->
                                                        <Grid Grid.Column="1" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="MON" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="1" Grid.Row="2" Grid.RowSpan="26">
                                                            <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            <Grid Name="grdMONDAY">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>

                                                            </Grid>
                                                        </Grid>

                                                        <!-- Column 2-->
                                                        <Grid Grid.Column="2" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="TUE" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="2" Grid.Row="2" Grid.RowSpan="26">
                                                            <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            <Grid Name="grdTUESDAY">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                            </Grid>
                                                        </Grid>

                                                        <!-- Column 3-->
                                                        <Grid Grid.Column="3" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <TextBlock Text="WED" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="3" Grid.Row="2" Grid.RowSpan="26">
                                                            <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            <Grid Name="grdWEDNESDAY">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                            </Grid>
                                                        </Grid>

                                                        <!-- Column 4-->
                                                        <Grid Grid.Column="4" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <TextBlock Text="THU" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="4" Grid.Row="2" Grid.RowSpan="26">
                                                            <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            <Grid Name="grdTHURSDAY">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                            </Grid>
                                                        </Grid>

                                                        <!-- Column 5-->
                                                        <Grid Grid.Column="5" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <TextBlock Text="FRI" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="5" Grid.Row="2" Grid.RowSpan="26">
                                                            <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            <Grid Name="grdFRIDAY">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                            </Grid>
                                                        </Grid>
                                                        <!-- Column 6-->
                                                        <Grid Grid.Column="6" Grid.Row="0">
                                                            <Border BorderBrush="Black" BorderThickness="1" >
                                                                <TextBlock Text="SAT" FontWeight="DemiBold" TextAlignment="Center"/>
                                                            </Border>
                                                        </Grid>

                                                        <Grid Grid.Column="6" Grid.Row="2" Grid.RowSpan="26" >
                                                            <Border BorderBrush="Black" BorderThickness="1" Background="LightGray" />
                                                            <Grid Name="grdSATURDAY">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>

                                                            </Grid>
                                                        </Grid>

                                                        <!-- Controls -->

                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>

                                    <Button Name="btnCreate" Content="ADD SCHEDULE" Grid.Column="0" Height="50" Width="200" Click="BtnCreate_Click" Margin="52,176,51,351" FontFamily="Lovelo" FontSize="16" Background="#2B3D54" Foreground="White" Cursor="Hand">
                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="White"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <ComboBox x:Name="cbInstructor" Height="45" Width="200" Margin="0,30,0,0" SelectedValuePath="I_ID" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbInstructor_SelectionChanged" 
                                      VerticalAlignment="Top">
                                        <ComboBox.Template>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                        <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                            <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                        </Canvas>
                                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </Grid>
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Themes1:SystemDropShadowChrome>
                                                    </Popup>
                                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="ClickMode" Value="Press"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                    <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True"/>
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ComboBox.Template>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                <Run Text="{Binding FName}"/>
                                                <Run Text="{Binding LName}"/>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <ComboBox x:Name="cbRoom" Height="45" Width="200" Margin="0,105,0,0" SelectedValuePath="Room" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbRoom_SelectionChanged" VerticalAlignment="Top">
                                        <ComboBox.Template>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                        <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                            <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                        </Canvas>
                                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </Grid>
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Themes1:SystemDropShadowChrome>
                                                    </Popup>
                                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="ClickMode" Value="Press"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                    <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                                <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder">
                                                                                        <Setter.Value>
                                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                                <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                                <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                                </MultiDataTrigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                    <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                                </MultiDataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True"/>
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ComboBox.Template>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                <Run Text="{Binding Room}"/>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <ComboBox Name="cbhour0" Width="250" Height="50" />
                                    <ComboBox Name="cbhour1" Width="250" Height="50" Visibility="Hidden"/>
                                    <ComboBox Name="cbhour2" Width="250" Height="50" Visibility="Visible" Margin="26,432,27,95"/>
                                    <Button Name="btnX" Content="x" Width="50" Height="50" Margin="127,356,126,171" Click="BtnX_Click"/>
                                </Grid>
                            </Border>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Border>

        </Grid>

        <Grid Height="30" Background="#7983A1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="1" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding Source={x:Static sys:DateTime.Now}, StringFormat=\{0: hh:mm:ss tt dddd\, MMM. dd\, yyyy\}}" Margin="0,0,7,0" FontSize="15" FontWeight="SemiBold" />
        </Grid>
    </StackPanel>
</Window>
