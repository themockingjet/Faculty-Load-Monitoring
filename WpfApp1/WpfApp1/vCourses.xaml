<UserControl x:Class="WpfApp1.vCourses"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="640" d:DesignWidth="1066">

    <Border Width="1066" Height="530">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
        </Border.Effect>
        <Grid Background="White">
            <Border Padding="20">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2  *"/>
                    </Grid.ColumnDefinitions>



                    <!-- Course -->
                    <TextBlock HorizontalAlignment="Left" Margin="50,77,0,0" Text="Course Code" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                    <Border Name="bdrCcode" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="280" Margin="50,103,0,0" Padding="10 5 10 5">
                        <TextBox Name="CcodeT"  FontSize="16" VerticalAlignment="Center" BorderThickness="0" HorizontalScrollBarVisibility="Disabled" AcceptsReturn="True" TextWrapping="Wrap" TextChanged="CcodeT_TextChanged"/>
                    </Border>
                    <TextBlock Name="CcodeW" HorizontalAlignment="Left" Margin="65,113,0,0" Text="Course Code . . ." FontSize="16" VerticalAlignment="Top" FontStyle="Italic" Foreground="Gray" IsHitTestVisible="False" />

                    <!-- Description -->
                    <TextBlock HorizontalAlignment="Left" Margin="50,160,0,0" Text="Course Description" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                    <Border Name="bdrCdesc" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="280" Margin="50,190,0,0" Padding="10 5 10 5">
                        <TextBox Name="CdescT"  FontSize="16" VerticalAlignment="Center" BorderThickness="0"  HorizontalScrollBarVisibility="Disabled" TextWrapping="Wrap" TextChanged="CdescT_TextChanged"/>
                    </Border>

                    <TextBlock Name="CdescW" HorizontalAlignment="Left" Margin="65,200,0,0" Text="Course Description . . ." FontSize="16" VerticalAlignment="Top" FontStyle="Italic" Foreground="Gray" IsHitTestVisible="False"
                               />


                    <!-- Data Grid -->
                    <Border Grid.Column="1" Grid.RowSpan="2">
                        <StackPanel Orientation="Vertical">
                            <Border Margin="50 50 50 0" Height="6" BorderThickness="0 2 0 1" BorderBrush="#486186"></Border>
                            <DataGrid x:Name="dtIns" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserAddRows="False" ItemsSource="{Binding}" CanUserDeleteRows="False" ColumnWidth="*" 
                                      AutoGeneratingColumn="DtIns_AutoGeneratingColumn" AutoGenerateColumns="False" AlternatingRowBackground="Gainsboro" AlternationCount="2" Margin="50 20 50 10" Height="350"
                                      BorderThickness="1" BorderBrush="#486186" HeadersVisibility="Column" SelectionUnit="FullRow" SelectionMode="Single" IsReadOnly="True">

                                <DataGrid.Columns>

                                    <DataGridTextColumn Binding="{Binding Sub_code}" Header="COURSE CODE" Width=".6*" IsReadOnly="True">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Binding="{Binding Type}" Header="COURSE DESCRIPTION" Width="1.5*" IsReadOnly="True">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </Border>

                    <!-- New Button-->
                    <Button x:Name="btnOpen" Content="NEW COURSE" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="280" Margin="50,0,12,90" Height="42" Background="#2D3D54" Foreground="White" FontSize="14" 
                            FontWeight="SemiBold" Cursor="Hand" >
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- Edit Button -->
                    <Button x:Name="btnEdit" Content="EDIT" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="130" Height="41" Margin="50,0,162,150" VerticalAlignment="Bottom"
                            HorizontalAlignment="Center" Cursor="Hand">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- Delete Button -->
                    <Button x:Name="btnClose" Content="DELETE" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="130" Height="41" Margin="200,0,12,150" VerticalAlignment="Bottom"
                            HorizontalAlignment="Center" Cursor="Hand">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- END -->
                </Grid>
            </Border>
        </Grid>
    </Border>

</UserControl>
