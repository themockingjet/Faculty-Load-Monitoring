<UserControl x:Class="WpfApp1.vOpenSub"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="640" d:DesignWidth="1066">

    <Border>
        <Border.Effect>
            <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
        </Border.Effect>
        <Grid Background="White">
            <Border Padding="20">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="430"/>
                    </Grid.RowDefinitions>



                    <!-- Search -->
                    <Border Name="bdrSearch" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="200" Margin="50,120,0,0" Padding="10 5 10 5">
                        <TextBox Name="S_codeT"  FontSize="16" VerticalAlignment="Center" BorderThickness="0" />
                    </Border>
                    <TextBlock Name="SearchW" HorizontalAlignment="Left" Margin="60 130,0,0" Text="Seach here. . ." FontSize="16" VerticalAlignment="Top" FontStyle="Italic" Foreground="Gray" IsHitTestVisible="False"
                               />
                    <!-- Semester -->
                    <Border Name="bdrSemester" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Right" Height="40" 
                                    VerticalAlignment="Top" Width="130" Margin="0,120,200,0" Padding="8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="cbSemester" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="112" BorderThickness="0" SelectionChanged="CbSemester_SelectionChanged">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Border x:Name="DropDownBorder" MaxHeight="105" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="112">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="White" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="Black" Offset="0"/>
                                                                                        <GradientStop Color="Black" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                            </ComboBox>
                            <TextBlock Name="tblSemester" Background="Transparent" Grid.Column="0" Text="Select Semester" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" />
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" Value="#2D3D54"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    
                    <!-- School Year -->
                    <Border Name="bdrSy" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Right" Height="40" 
                                    VerticalAlignment="Top" Width="130" Margin="0,120,50,0" Padding="8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="cbSy" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="112" BorderThickness="0" SelectionChanged="CbSy_SelectionChanged">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Border x:Name="DropDownBorder" MaxHeight="105" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="112">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="White" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="Black" Offset="0"/>
                                                                                        <GradientStop Color="Black" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                            </ComboBox>
                            <TextBlock Name="tblSy" Background="Transparent" Grid.Column="0" Text="Select Semester" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" />
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" Value="#2D3D54"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <!-- Data Grid -->
                    <Border Grid.Row="1">
                        <StackPanel Orientation="Vertical">
                            <Border Margin="50 0 50 0" Height="6" BorderThickness="0 2 0 1" BorderBrush="#486186"></Border>

                            <DataGrid Name="dtIns" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserAddRows="False" ItemsSource="{Binding}" CanUserDeleteRows="False" ColumnWidth="*" 
                                      AutoGeneratingColumn="DtIns_AutoGeneratingColumn" AutoGenerateColumns="False" AlternatingRowBackground="Gainsboro" AlternationCount="2" Margin="50 20 50 10" Height="350"
                                      BorderThickness="1" BorderBrush="#486186" HeadersVisibility="Column" SelectionUnit="FullRow" SelectionMode="Single" IsReadOnly="True">

                                <DataGrid.Columns>

                                    <DataGridTextColumn Binding="{Binding Path=Sub_code}" Header="CODE" Width="0.45*" IsReadOnly="True" CanUserReorder="False">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Binding="{Binding Path=Sub_desc}" Header="DESCRIPTION" Width="1.5*" IsReadOnly="True" CanUserReorder="False">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Binding="{Binding Path=T_units}" Header="UNITS" Width=".32*" IsReadOnly="True" CanUserReorder="False">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Binding="{Binding Path=Course}" Header="COURSE" Width=".4*" IsReadOnly="True" CanUserReorder="False">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0 0 1 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Binding="{Binding Path=Sem}" Header="SEMESTER" Width="0.35*" IsReadOnly="True" CanUserReorder="False">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>



                                    <DataGridTextColumn Binding="{Binding Path=Sy}" Header="A.Y." Width=".40*" IsReadOnly="True" CanUserReorder="False" >
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Background" Value="#2D3D54"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="BorderBrush" Value="White"/>
                                                <Setter Property="BorderThickness" Value="1 0 0 0"/>
                                                <Setter Property="FontSize" Value="16"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="FontSize" Value="14"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </Border>

                    <!-- Update Button-->
                    <Button Click="BtnOpen_Click" x:Name="btnOpen" Content="OPEN SUBJECTS" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="150" Margin="0 0 170 0" Height="41" Background="#2D3D54" Foreground="White" FontSize="14" 
                            FontWeight="SemiBold" Cursor="Hand" Grid.Row="1" >
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- Delete Button -->
                    <Button x:Name="btnClose" Content="CLOSE SUBJECTS" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="150" Height="41" Margin="170 0 0 0" VerticalAlignment="Bottom"
                            HorizontalAlignment="Center" Cursor="Hand" Grid.Row="1">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!-- END -->
                </Grid>
            </Border>
        </Grid>
    </Border>

</UserControl>
