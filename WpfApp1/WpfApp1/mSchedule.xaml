<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="WpfApp1.mSchedule"
             mc:Ignorable="d" 
             d:DesignHeight="640" d:DesignWidth="1366">


    <Border Width="1366" Height="640" >
        <Grid>
            <Border Width="1066" >
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
                </Border.Effect>
                <Grid Background="White">
                    <Border Padding="20">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2.5*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="1">
                                <ScrollViewer VerticalScrollBarVisibility="Visible">
                                    <Grid Height="660" Margin="30 0 30 0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Border BorderBrush="Black" Height="120" BorderThickness="2 2 2 0" Grid.Row="0">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Border Name="bdrZero" BorderBrush="Black" BorderThickness="0" Grid.Row="0" >
                                                    <TextBlock x:Name="tblzero" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="36"/>
                                                </Border>
                                                <Border Name="bdrOne" BorderBrush="Black" BorderThickness="0"  Grid.Row="1">
                                                    <TextBlock x:Name="tblone" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="36"/>
                                                </Border>
                                                <TextBlock Grid.RowSpan="2" x:Name="tbltwo" TextAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="60"/>
                                            </Grid>
                                        </Border>
                                        <Border Grid.Row="1" BorderThickness="1" BorderBrush="Black" Height="540" VerticalAlignment="Top">
                                            <Grid x:Name="grdmScheds">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height=".2*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                
                                                <Grid Grid.ColumnSpan="7" Grid.Row="1">
                                                    <Border BorderBrush="Black" BorderThickness="1"/>
                                                </Grid>

                                                <!-- Column 0 -->
                                                <Grid Grid.Column="0" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <TextBlock Text="TIME" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="4" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="8:00 - 9:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="6" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="9:00 - 10:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="8" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="10:00 - 11:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="10" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="11:00 - 12:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="12" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="12:00 - 1:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="14" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="1:00 - 2:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="16" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="2:00 - 3:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="18" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="3:00 - 4:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="20" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="4:00 - 5:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="22" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <TextBlock Text="5:00 - 6:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="24" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="6:00 - 7:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="0" Grid.Row="26" Grid.RowSpan="2">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <TextBlock Text="7:00 - 8:00" FontWeight="DemiBold" TextAlignment="Center" VerticalAlignment="Bottom"/>
                                                    </Border>
                                                </Grid>

                                                <!-- Column 1-->
                                                <Grid Grid.Column="1" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="MON" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="1" Grid.Row="2" Grid.RowSpan="26">
                                                    <Border BorderBrush="Black" BorderThickness="1" Background="#F0F0F0" />
                                                    <Grid Name="grdMONDAY">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Border Name="x8_00_AM" Grid.Row="2" Grid.RowSpan="6" Background="White" BorderBrush="Black" BorderThickness="1 2" Margin="0 -1">
                                                            <StackPanel VerticalAlignment="Center">
                                                                <TextBlock Text="111111111"  HorizontalAlignment="Center"/>
                                                                <TextBlock Text="1"  HorizontalAlignment="Center"/>
                                                            </StackPanel>
                                                        </Border>

                                                        <Border Name="x1_00_PM" Grid.Row="12" Grid.RowSpan="6" Background="White" BorderBrush="Black" BorderThickness="1 2" Margin="0 -1">
                                                            <StackPanel VerticalAlignment="Center">
                                                                <TextBlock Text="111111111"  HorizontalAlignment="Center"/>
                                                                <TextBlock Text="1"  HorizontalAlignment="Center"/>
                                                            </StackPanel>
                                                        </Border>
                                                    </Grid>
                                                </Grid>

                                                <!-- Column 2-->
                                                <Grid Grid.Column="2" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="TUE" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="2" Grid.Row="2" Grid.RowSpan="26">
                                                    <Border BorderBrush="Black" BorderThickness="1" Background="#F0F0F0" />
                                                    <Grid Name="grdTUESDAY">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                    </Grid>
                                                </Grid>

                                                <!-- Column 3-->
                                                <Grid Grid.Column="3" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <TextBlock Text="WED" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="3" Grid.Row="2" Grid.RowSpan="26">
                                                    <Border BorderBrush="Black" BorderThickness="1" Background="#F0F0F0" />
                                                    <Grid Name="grdWEDNESDAY">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                    </Grid>
                                                </Grid>

                                                <!-- Column 4-->
                                                <Grid Grid.Column="4" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <TextBlock Text="THU" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="4" Grid.Row="2" Grid.RowSpan="26">
                                                    <Border BorderBrush="Black" BorderThickness="1" Background="#F0F0F0" />
                                                    <Grid Name="grdTHURSDAY">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                    </Grid>
                                                </Grid>

                                                <!-- Column 5-->
                                                <Grid Grid.Column="5" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <TextBlock Text="FRI" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="5" Grid.Row="2" Grid.RowSpan="26">
                                                    <Border BorderBrush="Black" BorderThickness="1" Background="#F0F0F0" />
                                                    <Grid Name="grdFRIDAY">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                    </Grid>
                                                </Grid>
                                                <!-- Column 6-->
                                                <Grid Grid.Column="6" Grid.Row="0">
                                                    <Border BorderBrush="Black" BorderThickness="1" >
                                                        <TextBlock Text="SAT" FontWeight="DemiBold" TextAlignment="Center"/>
                                                    </Border>
                                                </Grid>

                                                <Grid Grid.Column="6" Grid.Row="2" Grid.RowSpan="26" >
                                                    <Border BorderBrush="Black" BorderThickness="1" Background="#F0F0F0" />
                                                    <Grid Name="grdSATURDAY">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        
                                                    </Grid>
                                                </Grid>

                                                <!-- Controls -->
                                                
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ScrollViewer>
                            </Border>

                            <Button Name="btnCreate" Content="ADD SCHEDULE" Grid.Column="0" Height="50" Width="200" Click="BtnCreate_Click" Margin="46,180,47,370" FontFamily="Lovelo" FontSize="16" Background="#2B3D54" Foreground="White" Cursor="Hand">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="White"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                            <ComboBox x:Name="cbInstructor" Height="45" Width="200" Margin="0,30,0,0" SelectedValuePath="I_ID" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbInstructor_SelectionChanged" 
                                      VerticalAlignment="Top">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                    <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Themes1:SystemDropShadowChrome>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                                <Run Text="{Binding FName}"/>
                                                <Run Text="{Binding LName}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <ComboBox x:Name="cbRoom" Height="45" Width="200" Margin="0,105,0,0" SelectedValuePath="Room" FontSize="16" VerticalContentAlignment="Center" SelectionChanged="CbRoom_SelectionChanged" VerticalAlignment="Top">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Themes1:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                    <Border MaxHeight="128.5" x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Themes1:SystemDropShadowChrome>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="Transparent">
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="2" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center" Stretch="Uniform"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                                <Run Text="{Binding Room}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <ComboBox Name="cbhour" Width="250" Height="50" />
                            <ComboBox Name="cbhour1" Width="250" Height="50" Visibility="Hidden"/>
                            <ComboBox Name="cbhour2" Width="250" Height="50" Visibility="Visible" Margin="22,436,21,114"/>
                            <Button Name="btnX" Content="x" Width="50" Height="50" Margin="122,362,121,188" Click="BtnX_Click"/>
                        </Grid>
                    </Border>
                </Grid>
            </Border>

            <Border Margin="1216,0,20,550" Width="130" Height="90">
                <Grid>
                    <Button x:Name="btnManage" IsEnabled="False" Content="Manage" FontFamily="Lovelo" FontSize="16" HorizontalAlignment="Left" VerticalAlignment="Top" 
                            Width="130" Height="45" BorderThickness="0" Background="White" Foreground="Black" Margin="0,45,0,0">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="border" Value="White"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnView" Cursor="Hand" Content="VIEW" MouseEnter="BtnView_MouseEnter" MouseLeave="BtnView_MouseLeave" Click="BtnView_Click" FontFamily="Lovelo" FontSize="16" HorizontalAlignment="Left" 
                            VerticalAlignment="Top" Width="130" Height="45" BorderThickness="0" Background="#556474" Foreground="White">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="White"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </Border>


            <Border Height="45" Width="130" Margin="1216,595,20,0">
                <Button x:Name="btnSave" Background="#556474" Foreground="White" Content="SAVE" FontFamily="Lovelo" BorderThickness="0" FontSize="16" Cursor="Hand" MouseEnter="BtnSave_MouseEnter"
                        MouseLeave="BtnSave_MouseLeave" Click="BtnSave_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#8EACBD"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Border>
        </Grid>
    </Border>
</UserControl>
