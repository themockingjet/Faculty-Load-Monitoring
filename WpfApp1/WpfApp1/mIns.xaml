<UserControl x:Class="WpfApp1.mIns"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366" MouseDown="UserControl_MouseDown">

    <UserControl.Resources>
        <local:CenterToolTipConverter x:Key="CenterTooltipConverter" />
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Placement" Value="Top" />
            <!--Offset to the arrow path-->
            <Setter Property="HorizontalOffset">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource CenterTooltipConverter}">
                        <Binding RelativeSource="{RelativeSource Self}" Path="PlacementTarget.ActualWidth"/>
                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalOffset" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Padding="20" VerticalAlignment="Center">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border x:Name="border" CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="DemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="Regular" FontSize="14" Text="{TemplateBinding Content}" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>
    
    <Border Height="700" Width="1366" Padding="150 50 150 50">
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity="0.5"/>
        </Border.Background>
        <Border>
            <Border.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
            </Border.Effect>
            <Grid Background="White" Height="330" Focusable="True" Name="Main_Grid">
                <Border Padding="20">
                    <Grid>
                        <!-- Name Start -->
                        <TextBlock HorizontalAlignment="Left" Margin="50,20,0,0" Text="Name*" FontSize="16" VerticalAlignment="Top"/>
                        <Border Name="bdrTitle" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="100" Margin="50,45,0,0" Padding="8" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="cbTitle" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="82" BorderThickness="0" 
                                              GotFocus="CbTitle_GotFocus" LostFocus="CbTitle_LostFocus" SelectionChanged="CbTitle_SelectionChanged" >
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="82">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                    <GradientStop Color="White" Offset="0"/>
                                                                                    <GradientStop Color="White" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="Black" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>
                                <TextBlock Name="tblTitle" Background="Transparent" Grid.Column="0" Text="Title" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False"/>
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="#2D3D54"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!-- First Name -->
                        <Border Name="bdrFname" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="180" Margin="160,45,0,0">
                            <Grid>
                                <Grid Grid.RowSpan="2" Margin="10">
                                    <TextBox Name="FnameT" FontStyle="Normal" VerticalAlignment="Bottom" Foreground="Black" BorderThickness="0" GotFocus="Fname_GotFocus" Height="18" Grid.ColumnSpan="2" />
                                    <TextBlock Name="FnameW" FontStyle="Italic" VerticalAlignment="Bottom" Foreground="Gray" Text="Given Name/First Name" Height="18" Grid.ColumnSpan="2" IsHitTestVisible="False" Cursor="IBeam"/>
                                </Grid>
                                <TextBox Name="tbxFname" Grid.Row="0" VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#FF569DE5"  BorderThickness="1" Height="24" Visibility="Collapsed" LostFocus="TbxFname_LostFocus" 
                                         GotFocus="Fname_GotFocus" Cursor="IBeam" TextChanged="TbxFname_TextChanged">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Bottom Style -->
                                <TextBlock Name="tblFname" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Text="Given Name/First Name" TextAlignment="Center" Background="#FF569DE5" Foreground="White" Width="180" Visibility="Collapsed"/>
                            </Grid>
                        </Border>

                        <!-- Middle Name-->
                        <Border Name="bdrMname" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="180" Margin="350,45,0,0">
                            <Grid>
                                <Grid Grid.RowSpan="2" Margin="10">
                                    <TextBox Name="MnameT" FontStyle="Normal" VerticalAlignment="Bottom" Foreground="Black" BorderThickness="0" GotFocus="MnameW_GotFocus" Height="18"/>
                                    <TextBlock Name="MnameW" FontStyle="Italic" VerticalAlignment="Bottom" Foreground="Gray" Text="Middle Name (optional)" IsHitTestVisible="False" Height="18" />
                                </Grid>
                                <TextBox Name="tbxMname" Grid.Row="0" VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#FF569DE5" BorderThickness="1" Height="24" Visibility="Collapsed" 
                                         LostFocus="TbxMname_LostFocus" TextChanged="TbxMname_TextChanged">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>

                                <!-- Bottom Style -->
                                <TextBlock Name="tblMname" Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Middle Name (optional)" VerticalAlignment="Bottom" TextAlignment="Center" Background="#FF569DE5" Foreground="White" Width="180" Visibility="Collapsed"/>
                            </Grid>
                        </Border>

                        <!-- Last Name -->
                        <Border Name="bdrLname" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="180" Margin="540,45,0,0">
                            <Grid>
                                <Grid Grid.RowSpan="2" Margin="10">
                                    <TextBox Name="LnameT" FontStyle="Normal" VerticalAlignment="Bottom" Foreground="Black" BorderThickness="0" GotFocus="LnameW_GotFocus" Height="18"/>
                                    <TextBlock Name="LnameW" FontStyle="Italic" VerticalAlignment="Bottom" Foreground="Gray" Text="Last Name/Surname" Height="18" IsHitTestVisible="False"/>
                                </Grid>
                                <TextBox Name="tbxLname" Grid.Row="0" VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#FF569DE5" BorderThickness="1" Height="24" Visibility="Collapsed" 
                                         LostFocus="TbxLname_LostFocus" TextChanged="TbxLname_TextChanged">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>

                                <!-- Bottom Style -->
                                <TextBlock Name="tblLname" Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Last Name/Surname" VerticalAlignment="Bottom" TextAlignment="Center" Background="#FF569DE5" 
                                           Foreground="White" Width="180" Visibility="Collapsed"/>
                            </Grid>
                        </Border>

                        <!-- Address Start-->
                        <TextBlock HorizontalAlignment="Left" Margin="50,100,0,0" Text="Address*" FontSize="16" VerticalAlignment="Top"/>
                        <Border Name="bdrRegion" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="130" Margin="50,125,0,0" Padding="8">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox x:Name="cbRegion" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="112" BorderThickness="0" SelectionChanged="CbRegion_SelectionChanged"
                                          GotFocus="CbRegion_GotFocus" LostFocus="CbRegion_LostFocus">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border x:Name="DropDownBorder" MaxHeight="102" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MinWidth="112">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                    <GradientStop Color="White" Offset="0"/>
                                                                                    <GradientStop Color="White" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="Black" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>
                                <TextBlock Name="tblRegion" Background="Transparent" Grid.Column="0" Text="Region" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" />
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="#2D3D54"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!-- Address Province -->
                        <Border Name="bdrProvince" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40"
                                    VerticalAlignment="Top" Width="180" Margin="190,125,0,0" Padding="8" IsEnabled="False" IsEnabledChanged="BdrProvince_IsEnabledChanged">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="cbProvince" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="162" BorderThickness="0" SelectionChanged="CbProvince_SelectionChanged"
                                          GotFocus="CbProvince_GotFocus" LostFocus="CbProvince_LostFocus">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border x:Name="DropDownBorder" MaxHeight="102" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MinWidth="162">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                    <GradientStop Color="White" Offset="0"/>
                                                                                    <GradientStop Color="White" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="Black" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>
                                <TextBlock Name="tblProvince" Background="Transparent" Grid.Column="0" Text="Province" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" />
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="#2D3D54"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="#DDDDDD"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!-- Address City/Municipalty -->
                        <Border Name="bdrCitmun" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" IsEnabledChanged="BdrCitmun_IsEnabledChanged"
                                    VerticalAlignment="Top" Width="180" Margin="380,125,0,0" Padding="8" IsEnabled="False" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="cbCitmun" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="162" BorderThickness="0" SelectionChanged="CbCitmun_SelectionChanged"
                                          GotFocus="CbCitmun_GotFocus" LostFocus="CbCitmun_LostFocus">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border x:Name="DropDownBorder" MaxHeight="102" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MinWidth="162">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                    <GradientStop Color="White" Offset="0"/>
                                                                                    <GradientStop Color="White" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="Black" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>
                                <TextBlock Name="tblCitmun" Background="Transparent" Grid.Column="0" Text="City/Municipality" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False"/>
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="#2D3D54"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="#DDDDDD"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!-- Address SubMun -->
                        <Border Name="bdrSubmun" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" IsEnabledChanged="BdrSubmun_IsEnabledChanged"
                                    VerticalAlignment="Top" Width="150" Margin="570,125,0,0" Padding="8" IsEnabled="False">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="cbSubmun" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="132" BorderThickness="0" SelectionChanged="CbSubmun_SelectionChanged"
                                          GotFocus="CbSubmun_GotFocus" LostFocus="CbSubmun_LostFocus">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border x:Name="DropDownBorder" MaxHeight="102" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MinWidth="132">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                    <GradientStop Color="White" Offset="0"/>
                                                                                    <GradientStop Color="White" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="Black" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>
                                <TextBlock Name="tblSubmun" Background="Transparent" Grid.Column="0" Text="Sub Municipality" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False"/>

                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="#2D3D54"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="#DDDDDD"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!-- Address Barangay-->
                        <TextBlock HorizontalAlignment="Left" Margin="50,180,0,0" Text="Barangay*" FontSize="16" VerticalAlignment="Top"/>
                        <Border Name="bdrBrgy" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" IsEnabledChanged="BdrBrgy_IsEnabledChanged"
                                    VerticalAlignment="Top" Width="130" Margin="50,205,0,0" Padding="8" IsEnabled="False">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="cbBrgy" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="112" BorderThickness="0" GotFocus="CbBrgy_GotFocus" LostFocus="CbBrgy_LostFocus" 
                                          SelectionChanged="CbBrgy_SelectionChanged">
                                    <ComboBox.Template>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                    <Border x:Name="DropDownBorder" MaxHeight="102" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MinWidth="112">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="ClickMode" Value="Press"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                    <GradientStop Color="White" Offset="0"/>
                                                                                    <GradientStop Color="White" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="Black" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="White" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                            </MultiDataTrigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                            </Trigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                            </MultiDataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ComboBox.Template>
                                </ComboBox>
                                <TextBlock Name="tblBrgy" Background="Transparent" Grid.Column="0" Text="Barangay" FontStyle="Italic" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="False" />
                            </Grid>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="#2D3D54"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="#DDDDDD"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!-- Address Street -->
                        <TextBlock HorizontalAlignment="Left" Margin="190,180,0,0" Text="Street" FontSize="16" VerticalAlignment="Top"/>
                        <Border Name="bdrStreet" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41" 
                                    VerticalAlignment="Top" Width="340" Margin="190,205,0,0">
                            <Grid>
                                <Grid Grid.RowSpan="2" Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="98*"/>
                                        <ColumnDefinition Width="33*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Name="StreetW" FontStyle="Italic" VerticalAlignment="Bottom" Foreground="Gray" BorderThickness="0" Text="Building, Street, House # and etc..." GotFocus="StreetW_GotFocus" Height="18" Grid.ColumnSpan="2" />
                                    <TextBox Name="StreetT" FontStyle="Normal" VerticalAlignment="Bottom" Foreground="Black" BorderThickness="0" GotFocus="StreetW_GotFocus" Height="18" Visibility="Collapsed" Grid.ColumnSpan="2" />
                                </Grid>
                                <TextBox Name="tbxStreet" Grid.Row="0" VerticalAlignment="Top" VerticalContentAlignment="Center" BorderBrush="#FF569DE5"  BorderThickness="1" Height="24" Visibility="Collapsed" 
                                         LostFocus="TbxStreet_LostFocus">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Bottom Style -->
                                <TextBlock Name="tblStreet" Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" TextAlignment="Center" Background="#FF569DE5" Foreground="White" 
                                           Width="340" Visibility="Collapsed" Text="Building, Street, House # and etc..."/>
                            </Grid>
                        </Border>

                        <!-- Contact -->
                        <TextBlock HorizontalAlignment="Left" Margin="540,180,0,0" Text="Contact" FontSize="16" VerticalAlignment="Top"/>
                        <Border Name="bdrContact" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="41"
                                    VerticalAlignment="Top" Width="180" Margin="540,205,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="33*"/>
                                    <ColumnDefinition Width="98*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Name="grdCon" Grid.Column="0" Grid.ColumnSpan="2" Margin="10">
                                    <Image Name="conim" Source="img/phflag.png" Height="23" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,0,0,0"/>
                                    <TextBlock Name="conpre" HorizontalAlignment="Left" Text="+63" Height="24" FontSize="14" Margin="26,2,0,13" Foreground="Gray" VerticalAlignment="Center" Visibility="Collapsed" />
                                </Grid>
                                <Border Name="bdrConline" HorizontalAlignment="Left" BorderThickness="0 0 1 0" BorderBrush="LightGray" Grid.Column="1" Margin="9,0,0,0" Visibility="Collapsed"/>

                                <TextBox Grid.Column="1" Name="ContactW" FontStyle="Italic" VerticalAlignment="Bottom" Foreground="Gray" BorderThickness="0" Text="Cellphone Number" GotFocus="ContactW_GotFocus" Height="18" Margin="10" />
                                <TextBox Grid.Column="1" Name="ContactT" FontStyle="Normal" VerticalAlignment="Center" Foreground="Black" BorderThickness="0" GotFocus="ContactW_GotFocus" Visibility="Collapsed" Height="18" Margin="5 0 10 0" />

                                <TextBox Grid.Column="1" Name="tbxContact" VerticalAlignment="Top" VerticalContentAlignment="Center" Visibility="Collapsed" BorderThickness="0" Height="23" Margin="13,0,0,0"
                                         FontSize="15" LostFocus="TbxContact_LostFocus" TextChanged="TbxContact_TextChanged">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <TextBox Grid.Column="1" Name="ContactWW" FontStyle="Italic" VerticalAlignment="Bottom" Foreground="Gray" BorderThickness="0" Text="e.g. 9123456789" GotFocus="ContactW_GotFocus" Height="18" Margin="25,0,10,17" 
                                         IsHitTestVisible="False" Visibility="Collapsed" Background="Transparent" />
                                <!-- Bottom Style -->
                                <TextBlock Grid.ColumnSpan="2" Name="tblContact" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="Contact Number" TextAlignment="Center" 
                                           Background="#FF569DE5" Foreground="White" Width="178" Visibility="Collapsed" />
                            </Grid>
                        </Border>

                        <!-- Save Button -->
                        <Button x:Name="btnSave" Content="SAVE" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="807,204,0,0" Height="41" Background="#2D3D54" Foreground="White" FontSize="14" 
                            FontWeight="SemiBold" Cursor="Hand" Click="BtnSave_Click" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="Red"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <!-- Delete Button -->
                        <Button x:Name="btnCancel" Content="CANCEL" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="75" Height="41" Margin="901,204,0,0" VerticalAlignment="Top"
                            HorizontalAlignment="Left" Cursor="Hand" Click="BtnCancel_Click" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="Red"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <!-- END -->
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Border>
</UserControl>
