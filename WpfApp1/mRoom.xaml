<UserControl x:Class="WpfApp1.mRoom"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366">
    <UserControl.Resources>
        <local:CenterToolTipConverter x:Key="CenterTooltipConverter" />
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Placement" Value="Top" />
            <!--Offset to the arrow path-->
            <Setter Property="HorizontalOffset">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource CenterTooltipConverter}">
                        <Binding RelativeSource="{RelativeSource Self}" Path="PlacementTarget.ActualWidth"/>
                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalOffset" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Padding="20" VerticalAlignment="Center">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border x:Name="border" CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="DemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="Regular" FontSize="14" Text="{TemplateBinding Content}" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Border Padding="150 50 150 50">
        <Border.Background>
            <SolidColorBrush Color="Black" Opacity="0.5"/>
        </Border.Background>
        <Border>
            <Border.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="50"/>
            </Border.Effect>
            <Grid Background="White" Height="350" Width="420" Focusable="True" Name="Main_Grid">
                <Border Padding="20">
                    <Grid>
                        <TextBlock HorizontalAlignment="Left" Margin="50,20,0,0" Text="Room Name" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                        <TextBlock HorizontalAlignment="Left" Margin="205,20,0,0" Text="Room Number" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                        <Border Name="bdrRoom" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40"
                                    VerticalAlignment="Top" Width="125" Margin="50,45,0,0" Padding="10 5 10 5">
                            <TextBox Name="RoomT" FontSize="16" VerticalAlignment="Center" BorderThickness="0" HorizontalScrollBarVisibility="Disabled" TextWrapping="Wrap" PreviewTextInput="LetterOnly"
                                     GotFocus="RoomT_GotFocus" LostFocus="RoomT_LostFocus" TextChanged="RoomT_TextChanged" />
                        </Border>
                        <Border Name="ppRoom" Padding="20" VerticalAlignment="Center" Margin="324,0,-144,197" Height="113" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z" Margin="0 0 -20 0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Name="ppRoomtxt" Text="Room is required" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Border>
                        <Border Name="ppRoomNumber" Padding="20" VerticalAlignment="Center" Margin="164,-53,0,250" Height="113" Visibility="Collapsed">
                            <StackPanel>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Text="Room number is required" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z"/>

                            </StackPanel>
                        </Border>

                        <TextBlock FontSize="25" Text=" - " HorizontalAlignment="Center" Margin="176,45,174,225" Width="30" />
                        <Border Name="bdrRoom2" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="125" Margin="205,45,0,0" Padding="10 5 10 5">
                            <TextBox Name="RoomT2" FontSize="16" VerticalAlignment="Center" BorderThickness="0" HorizontalScrollBarVisibility="Disabled" PreviewTextInput="NumberOnly"
                                     GotFocus="RoomT2_GotFocus" LostFocus="RoomT2_LostFocus" TextChanged="RoomT2_TextChanged"/>
                        </Border>

                        <!-- Type -->
                        <TextBlock HorizontalAlignment="Left" Margin="50,100,0,0" Text="Type" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                        <Border Name="bdrType" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="280" Margin="50,125,0,0" Padding="10 5 10 5">
                            <ComboBox x:Name="cbType" HorizontalAlignment="Center" VerticalAlignment="Center" Width="260" BorderThickness="0" FontSize="16" GotFocus="CbType_GotFocus" LostFocus="CbType_LostFocus"
                                      SelectionChanged="CbType_SelectionChanged">
                                <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="260">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ClickMode" Value="Press"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="White" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Stretch="Uniform" Fill="#FF606060" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Cursor="Hand"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Black"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Blue"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="Black" Offset="0"/>
                                                                                        <GradientStop Color="Black" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="White" Offset="0"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                                        </MultiDataTrigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                                        </Trigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                                        </MultiDataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                            </MultiTrigger>
                                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                            </ComboBox>
                        </Border>
                        <Border Name="ppType" Padding="20" VerticalAlignment="Center" Margin="326,80,-144,117" Height="113" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z" Margin="0 0 -20 0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Text="Room type is required" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>

                            </StackPanel>
                        </Border>

                        <!-- Capacity -->
                        <TextBlock HorizontalAlignment="Left" Margin="50,180,0,0" Text="Capacity" FontSize="16" VerticalAlignment="Top"  IsHitTestVisible="False" />
                        <Border Name="bdrCap" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="40" 
                                    VerticalAlignment="Top" Width="280" Margin="50,205,0,0" Padding="10 5 10 5">
                            <TextBox Name="CapT"  FontSize="16" VerticalAlignment="Center" BorderThickness="0"  HorizontalScrollBarVisibility="Disabled" TextWrapping="Wrap" PreviewTextInput="NumberOnly"
                                     GotFocus="CapT_GotFocus" LostFocus="CapT_LostFocus" TextChanged="CapT_TextChanged"/>
                        </Border>
                        <Border Name="ppCap" Padding="20" VerticalAlignment="Center" Margin="326,160,-170,37" Height="113" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="270" ShadowDepth="2" Opacity="0.8"/>
                                </StackPanel.Effect>
                                <Path HorizontalAlignment="Center" Fill="White" Stretch="Fill" Width="20" Height="10" Data="M 0 0 L 6 6 L 12 0 Z" Margin="0 0 -20 0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Border CornerRadius="5" HorizontalAlignment="Center" VerticalAlignment="Top" BorderThickness="0" Background="White" MinHeight="40" MinWidth="100">
                                    <Grid ClipToBounds="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="Red" Padding="5" CornerRadius="5 5 0 0">
                                            <TextBlock FontFamily="Tahoma" FontWeight="SemiBold" FontSize="12" Text="FIELD INCOMPLETE" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <Border Grid.Row="1" Padding="10" CornerRadius="5 5 0 0">
                                            <TextBlock Text="Room capacity is required" FontFamily="Tahoma" FontWeight="Light" FontSize="14" Foreground="Black" TextAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Border>

                        <!-- New Button-->
                        <Button x:Name="btnCancel" Content="X" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="31" Height="32" Margin="0,-16,-16,0" VerticalAlignment="Top"
                            HorizontalAlignment="Right" Cursor="Hand" Click="BtnCancel_Click" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="Red"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#2D3D54"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <!-- Edit Button -->
                        <Button x:Name="btnSave" Content="SAVE" Background="#2d3d54" Foreground="White" FontSize="14" FontWeight="SemiBold" Width="130" Height="41" VerticalAlignment="Bottom"
                                            HorizontalAlignment="Center" Cursor="Hand" Click="BtnSave_Click">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="border" Value="#0479a8"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#0479a8"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="border" Value="lightgray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <Image  x:Name="HelpRoom" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" ToolTipService.Placement="Top" Width="15" Margin="35,24,0,0" Source="img/h3lp.png" RenderTransformOrigin="-2.667,0.533">
                            <Image.ToolTip>
                                <ToolTip Style="{x:Null}">
                                    <TextBlock Name="ttRoom"/>
                                </ToolTip>
                            </Image.ToolTip>
                        </Image>

                        <Image x:Name="HelpCapacity" HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="15" Margin="35,185,0,0" Source="img/h3lp.png">
                            <Image.ToolTip>
                                <ToolTip Style="{x:Null}">
                                    <TextBlock Name="ttCap"/>
                                </ToolTip>
                            </Image.ToolTip>
                        </Image>
                        <Image x:Name="HelpType" HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="15" Margin="35,106,0,0" Source="img/h3lp.png">
                            <Image.ToolTip>
                                <ToolTip Style="{x:Null}">
                                    <TextBlock Name="ttType"></TextBlock>
                                </ToolTip>
                            </Image.ToolTip>
                        </Image>

                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Border>
</UserControl>
